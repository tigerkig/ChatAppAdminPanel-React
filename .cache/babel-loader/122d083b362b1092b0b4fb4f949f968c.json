{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\user\\\\UserDetailsForm.js\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel, Avatar } from '@material-ui/core'; // utils\n\nimport axios from '../../../utils/axios';\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload';\nimport countries from './countries'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nUserDetailsForm.propTypes = {\n  currentUser: PropTypes.object\n};\nexport default function UserDetailsForm({\n  currentUser\n}) {\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.name) || '',\n      email: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || '',\n      password: '',\n      gender: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.gender) || '',\n      role: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) || '',\n      coverage: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.coverage) || 50,\n      fixedLocation: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fixedLocation) || '',\n      phoneNumber: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.phoneNumber) || '',\n      address: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.address) || '',\n      country: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.country) || '',\n      state: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.state) || '',\n      city: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.city) || '',\n      zipCode: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.zipCode) || '',\n      avatarUrl: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.avatarUrl) || null,\n      isVerified: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isVerified) || true,\n      status: currentUser === null || currentUser === void 0 ? void 0 : currentUser.status,\n      onlineStatus: currentUser ? currentUser.online ? 'online' : 'offline' : 'offline',\n      username: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || '',\n      note: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.note) || '',\n      credit: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.credit) || '0 %',\n      balance: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.balance) || '$ 0'\n    },\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        await axios.put(`/user/manage-users?username=${values.username}`, values);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Update success', {\n          variant: 'success'\n        });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n\n    if (file) {\n      setFieldValue('avatarUrl', { ...file,\n        preview: URL.createObjectURL(file)\n      });\n    }\n  }, [setFieldValue]);\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              py: 10,\n              px: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: values.status !== 'active' ? 'error' : 'success',\n              sx: {\n                textTransform: 'uppercase',\n                position: 'absolute',\n                top: 24,\n                right: 24\n              },\n              children: values.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: values.avatarUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                sx: {\n                  px: 2,\n                  textAlign: 'center'\n                },\n                children: touched.avatarUrl && errors.avatarUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                disabled: true,\n                onChange: event => setFieldValue('status', event.target.checked ? 'banned' : 'active'),\n                checked: values.status !== 'active'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Banned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Apply disable account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                mb: 3,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                disabled: true,\n                ...getFieldProps('isVerified'),\n                checked: values.isVerified\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 26\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Email Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Disabling this will automatically send the user a verification email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Email\",\n                  ...getFieldProps('email')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Nickname\",\n                  ...getFieldProps('name')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  label: \"Gender\",\n                  ...getFieldProps('gender'),\n                  SelectProps: {\n                    native: true\n                  },\n                  disabled: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"male\",\n                    children: \"Male\"\n                  }, \"male\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"female\",\n                    children: \"Female\"\n                  }, \"female\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Role\",\n                  ...getFieldProps('role')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Credit\",\n                  ...getFieldProps('credit')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Balance\",\n                  ...getFieldProps('balance')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Status\",\n                  ...getFieldProps('credit')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Balance\",\n                  ...getFieldProps('balance')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"State/Region\",\n                  ...getFieldProps('state'),\n                  error: Boolean(touched.state && errors.state),\n                  helperText: touched.state && errors.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"City\",\n                  ...getFieldProps('city'),\n                  error: Boolean(touched.city && errors.city),\n                  helperText: touched.city && errors.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Address\",\n                  ...getFieldProps('address'),\n                  error: Boolean(touched.address && errors.address),\n                  helperText: touched.address && errors.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Zip/Code\",\n                  ...getFieldProps('zipCode')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Username\",\n                  ...getFieldProps('username'),\n                  error: Boolean(touched.username && errors.username),\n                  helperText: touched.username && errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Role\",\n                  ...getFieldProps('role'),\n                  error: Boolean(touched.role && errors.role),\n                  helperText: touched.role && errors.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/user/UserDetailsForm.js"],"names":["Yup","PropTypes","useCallback","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","Avatar","axios","fData","fakeRequest","PATH_DASHBOARD","Label","UploadAvatar","countries","UserDetailsForm","propTypes","currentUser","object","navigate","enqueueSnackbar","formik","enableReinitialize","initialValues","name","email","password","gender","role","coverage","fixedLocation","phoneNumber","address","country","state","city","zipCode","avatarUrl","isVerified","status","onlineStatus","online","username","note","credit","balance","onSubmit","values","setSubmitting","resetForm","setErrors","put","variant","user","list","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","acceptedFiles","file","preview","URL","createObjectURL","py","px","textTransform","position","top","right","mb","textAlign","event","target","checked","color","mx","width","justifyContent","p","xs","sm","readOnly","native","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@material-ui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormControlLabel,\n  Avatar\n} from '@material-ui/core';\n// utils\nimport axios from '../../../utils/axios';\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload';\nimport countries from './countries';\n\n// ----------------------------------------------------------------------\n\nUserDetailsForm.propTypes = {\n  currentUser: PropTypes.object\n};\n\nexport default function UserDetailsForm({ currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      password: '',\n      gender: currentUser?.gender || '',\n      role: currentUser?.role || '',\n      coverage: currentUser?.coverage || 50,\n      fixedLocation: currentUser?.fixedLocation || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || null,\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      onlineStatus: currentUser ? ( currentUser.online ? 'online' : 'offline' ) : 'offline',\n      username: currentUser?.username || '',\n      note: currentUser?.note || '',\n      credit: currentUser?.credit || '0 %',\n      balance: currentUser?.balance || '$ 0'\n    },\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await fakeRequest(500);\n\n        await axios.put(`/user/manage-users?username=${values.username}`, values);\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file)\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.status !== 'active' ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status}\n              </Label>\n\n              <Box sx={{ mb: 5 }}>\n                <Avatar src={values.avatarUrl} />\n                <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                  {touched.avatarUrl && errors.avatarUrl}\n                </FormHelperText>\n              </Box>\n\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    disabled\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\n                    checked={values.status !== 'active'}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={<Switch disabled {...getFieldProps('isVerified')} checked={values.isVerified} />}\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Email Verified\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Disabling this will automatically send the user a verification email\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    disabled\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"Email\"\n                    {...getFieldProps('email')}\n                  />\n                  <TextField\n                    disabled\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"Nickname\"\n                    {...getFieldProps('name')}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Gender\"\n                    {...getFieldProps('gender')}\n                    SelectProps={{ native: true }}\n                    disabled\n                  >\n                    <option value=\"\" />\n                    <option key=\"male\" value=\"male\">\n                      Male\n                    </option>\n                    <option key=\"female\" value=\"female\">\n                      Female\n                    </option>\n                  </TextField>\n                  <TextField disabled fullWidth label=\"Role\" {...getFieldProps('role')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField disabled fullWidth label=\"Credit\" {...getFieldProps('credit')} />\n                  <TextField disabled fullWidth label=\"Balance\" {...getFieldProps('balance')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField disabled fullWidth label=\"Status\" {...getFieldProps('credit')} />\n                  <TextField disabled fullWidth label=\"Balance\" {...getFieldProps('balance')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"State/Region\"\n                    {...getFieldProps('state')}\n                    error={Boolean(touched.state && errors.state)}\n                    helperText={touched.state && errors.state}\n                  />\n                  <TextField\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"City\"\n                    {...getFieldProps('city')}\n                    error={Boolean(touched.city && errors.city)}\n                    helperText={touched.city && errors.city}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"Address\"\n                    {...getFieldProps('address')}\n                    error={Boolean(touched.address && errors.address)}\n                    helperText={touched.address && errors.address}\n                  />\n                  <TextField fullWidth label=\"Zip/Code\" {...getFieldProps('zipCode')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"Username\"\n                    {...getFieldProps('username')}\n                    error={Boolean(touched.username && errors.username)}\n                    helperText={touched.username && errors.username}\n                  />\n                  <TextField\n                    inputProps={{ readOnly: true }}\n                    fullWidth\n                    label=\"Role\"\n                    {...getFieldProps('role')}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}