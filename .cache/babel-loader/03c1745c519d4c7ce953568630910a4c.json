{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\privatechat\\\\ChatMessageInput.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport micFill from '@iconify/icons-eva/mic-fill';\nimport roundSend from '@iconify/icons-ic/round-send';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate'; // material\n\nimport { styled } from '@material-ui/core/styles';\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { addRecipients, onSendMessage, getConversation, getParticipants, markConversationAsRead, resetActiveConversation } from '../../../redux/slices/chat';\nimport axios from '../../../utils/axios'; // hooks\n\nimport useAuth from '../../../hooks/useAuth'; //\n\nimport EmojiPicker from '../../EmojiPicker'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(({\n  theme\n}) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2)\n})); // ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  opponentId: PropTypes.string,\n  onSend: PropTypes.func\n};\nexport default function ChatMessageInput({\n  disabled,\n  conversationId,\n  opponentId,\n  onSend,\n  ...other\n}) {\n  const dispatch = useDispatch();\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n  const {\n    user\n  } = useAuth();\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = async () => {\n    if (!message) {\n      return '';\n    }\n\n    if (onSend) {\n      // const accessToken = window.localStorage.getItem('accessToken');\n      // const authHeader = {\n      //   headers: {\n      //     Authorization: `Bearer ${accessToken}`\n      //   }\n      // };\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        imgs: [],\n        senderId: user._id,\n        senderName: user.name,\n        messageType: 0,\n        receiverId: opponentId\n      }); // dispatch(getConversation(resp.data.conversationKey));\n    }\n\n    return setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      disabled: disabled,\n      fullWidth: true,\n      value: message,\n      disableUnderline: true,\n      onKeyUp: handleKeyUp,\n      onChange: handleChangeMessage,\n      placeholder: \"Type a message\",\n      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"start\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          disabled: disabled,\n          value: message,\n          setValue: setMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this),\n      sx: {\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"vertical\",\n      flexItem: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      disabled: !message,\n      onClick: handleSend,\n      sx: {\n        mx: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: roundSend,\n        width: 24,\n        height: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/privatechat/ChatMessageInput.js"],"names":["v4","uuidv4","PropTypes","Icon","useRef","useState","micFill","roundSend","attach2Fill","roundAddPhotoAlternate","styled","Input","Divider","IconButton","InputAdornment","Stack","useDispatch","useSelector","addRecipients","onSendMessage","getConversation","getParticipants","markConversationAsRead","resetActiveConversation","axios","useAuth","EmojiPicker","RootStyle","theme","minHeight","display","position","alignItems","paddingLeft","spacing","ChatMessageInput","propTypes","disabled","bool","conversationId","string","opponentId","onSend","func","other","dispatch","fileInputRef","message","setMessage","user","handleAttach","current","click","handleChangeMessage","event","target","value","handleKeyUp","key","handleSend","messageId","imgs","senderId","_id","senderName","name","messageType","receiverId","height","mx"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport micFill from '@iconify/icons-eva/mic-fill';\nimport roundSend from '@iconify/icons-ic/round-send';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation\n} from '../../../redux/slices/chat';\nimport axios from '../../../utils/axios';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n//\nimport EmojiPicker from '../../EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2)\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  opponentId: PropTypes.string,\n  onSend: PropTypes.func\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, opponentId, onSend, ...other }) {\n  const dispatch = useDispatch();\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n  const { user } = useAuth();\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChangeMessage = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = async () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend) {\n      // const accessToken = window.localStorage.getItem('accessToken');\n      // const authHeader = {\n      //   headers: {\n      //     Authorization: `Bearer ${accessToken}`\n      //   }\n      // };\n\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        imgs: [],\n        senderId: user._id,\n        senderName: user.name,\n        messageType: 0,\n        receiverId: opponentId\n      });\n\n      // dispatch(getConversation(resp.data.conversationKey));\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        sx={{ height: '100%' }}\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Icon icon={roundSend} width={24} height={24} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}