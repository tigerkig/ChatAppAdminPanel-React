{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\announcement\\\\PostForm.js\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Typography, TextareaAutosize, TextField } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; // utils\n\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnnouncementPostForm() {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      message: '',\n      posted_at: 'public',\n      publisher: 'administrator'\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        await axios.put('/chat/announcementpost/', values);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successful', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik; // console.log(values);\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextareaAutosize, { ...getFieldProps('message'),\n                  maxRows: 20,\n                  minRows: 6,\n                  \"aria-label\": \"Post Public Announcement\",\n                  placeholder: \"text input(max. 2000 words)\",\n                  style: {\n                    width: '100%',\n                    padding: '10px'\n                  } // error={Boolean(touched.message && errors.message)}\n                  // helperText={touched.message && errors.message}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 1.5\n                  },\n                  children: \"Add pictures (max. 9) from hard-disk.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 10,\n                  sm: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Post at\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('posted_at'),\n                  \"aria-label\": \"Posted at\" // error={Boolean(touched.posted_at && errors.posted_at)}\n                  // helperText={touched.posted_at && errors.posted_at}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"public\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 63\n                    }, this),\n                    label: \"Public chat room\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"top\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 60\n                    }, this),\n                    label: \"Top column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 8,\n                  sm: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Publisher\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('publisher'),\n                  \"aria-label\": \"Publisher\" // error={Boolean(touched.publisher && errors.publisher)}\n                  // helperText={touched.publisher && errors.publisher}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"administrator\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 70\n                    }, this),\n                    label: \"App administrator (default)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"user\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 61\n                    }, this),\n                    label: \"User email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), values.publisher === 'user' && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 18,\n                  sm: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: {\n                    xs: 'column',\n                    sm: 'row'\n                  },\n                  spacing: {\n                    xs: 3,\n                    sm: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('poster_email'),\n                    variant: \"standard\",\n                    style: {\n                      width: 200\n                    } // error={Boolean(touched.poster_email && errors.poster_email)}\n                    // helperText={touched.poster_email && errors.poster_email}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"div\",\n                    style: {\n                      lineHeight: 2\n                    },\n                    children: \"(announcement post by user's name/avatar)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Range Setting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Center (longitude, latitude)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('position'),\n                      variant: \"standard\",\n                      style: {\n                        width: 200\n                      } // error={Boolean(touched.position && errors.position)}\n                      // helperText={touched.position && errors.position}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Cover people\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('coverage'),\n                      variant: \"standard\",\n                      style: {\n                        width: 200\n                      } // error={Boolean(touched.coverage && errors.coverage)}\n                      // helperText={touched.coverage && errors.coverage}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"person\\uFF08 between 0~1 million)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3,\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  loading: isSubmitting,\n                  children: \"SEND MESSAGE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/announcement/PostForm.js"],"names":["Yup","PropTypes","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Typography","TextareaAutosize","TextField","Radio","RadioGroup","FormControlLabel","axios","fakeRequest","AnnouncementPostForm","enqueueSnackbar","itemValidation","object","shape","message","string","required","formik","enableReinitialize","initialValues","posted_at","publisher","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","put","variant","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","width","padding","lineHeight","mt","display","justifyContent"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,SAA/B,QAAgD,QAAhD,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,UAAjC,EAA6CC,gBAA7C,EAA+DC,SAA/D,QAAgF,mBAAhF;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAsBnB,WAAW,EAAvC;AAEA,QAAMoB,cAAc,GAAGtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,OAAO,EAAEzB,GAAG,CAAC0B,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAD+B,GAAnB,CAAvB;AAIA,QAAMC,MAAM,GAAGtB,SAAS,CAAC;AACvBuB,IAAAA,kBAAkB,EAAE,IADG;AAEvBC,IAAAA,aAAa,EAAE;AAAEL,MAAAA,OAAO,EAAE,EAAX;AAAeM,MAAAA,SAAS,EAAE,QAA1B;AAAoCC,MAAAA,SAAS,EAAE;AAA/C,KAFQ;AAGvBC,IAAAA,gBAAgB,EAAEX,cAHK;AAIvBY,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,SAAjB;AAA4BC,MAAAA;AAA5B,KAAf,KAA2D;AACnE,UAAI;AACF,cAAMnB,WAAW,CAAC,GAAD,CAAjB;AAEA,cAAMD,KAAK,CAACqB,GAAN,CAAU,yBAAV,EAAqCJ,MAArC,CAAN;AAEAE,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAf,QAAAA,eAAe,CAAC,gCAAD,EAAmC;AAAEmB,UAAAA,OAAO,EAAE;AAAX,SAAnC,CAAf;AACD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,SAAS,CAACG,KAAD,CAAT;AACD;AACF;AAlBsB,GAAD,CAAxB;AAqBA,QAAM;AAAEE,IAAAA,MAAF;AAAUR,IAAAA,MAAV;AAAkBS,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA,aAAvD;AAAsEC,IAAAA;AAAtE,MAAwFpB,MAA9F,CA5B6C,CA6B7C;;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,MAAvB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,QAAQ,EAAEiB,YAA9C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEI,cAAAA,CAAC,EAAE;AAAL,aAAV;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAE,CAAhB;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEC,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,uCACE,QAAC,gBAAD,OACMH,aAAa,CAAC,SAAD,CADnB;AAEE,kBAAA,OAAO,EAAE,EAFX;AAGE,kBAAA,OAAO,EAAE,CAHX;AAIE,gCAAW,0BAJb;AAKE,kBAAA,WAAW,EAAC,6BALd;AAME,kBAAA,KAAK,EAAE;AAAEI,oBAAAA,KAAK,EAAE,MAAT;AAAiBC,oBAAAA,OAAO,EAAE;AAA1B,mBANT,CAOE;AACA;;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAcE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEH,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEG,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAdF,eAoBE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEJ,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,EAAN;AAAUC,kBAAAA,EAAE,EAAE;AAAd,iBAAxD;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,WAApB;AAAgC,kBAAA,SAAS,EAAC,KAA1C;AAAgD,kBAAA,KAAK,EAAE;AAAEG,oBAAAA,UAAU,EAAE;AAAd,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,UAAD,OACMN,aAAa,CAAC,WAAD,CADnB;AAEE,gCAAW,WAFb,CAGE;AACA;AAJF;AAAA,0CAME,QAAC,gBAAD;AAAkB,oBAAA,KAAK,EAAC,QAAxB;AAAiC,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAA1C;AAAqD,oBAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE,QAAC,gBAAD;AAAkB,oBAAA,KAAK,EAAC,KAAxB;AAA8B,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAAvC;AAAkD,oBAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eAmCE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEE,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,WAApB;AAAgC,kBAAA,SAAS,EAAC,KAA1C;AAAgD,kBAAA,KAAK,EAAE;AAAEG,oBAAAA,UAAU,EAAE;AAAd,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,UAAD,OACMN,aAAa,CAAC,WAAD,CADnB;AAEE,gCAAW,WAFb,CAGE;AACA;AAJF;AAAA,0CAME,QAAC,gBAAD;AAAkB,oBAAA,KAAK,EAAC,eAAxB;AAAwC,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAAjD;AAA4D,oBAAA,KAAK,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE,QAAC,gBAAD;AAAkB,oBAAA,KAAK,EAAC,MAAxB;AAA+B,oBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,4BAAxC;AAAmD,oBAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnCF,EAkDGb,MAAM,CAACH,SAAP,KAAqB,MAArB,iBACC,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEkB,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,EAAN;AAAUC,kBAAAA,EAAE,EAAE;AAAd,iBAAxD;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEG,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAE;AAAEJ,oBAAAA,EAAE,EAAE,QAAN;AAAgBC,oBAAAA,EAAE,EAAE;AAApB,mBAAlB;AAA+C,kBAAA,OAAO,EAAE;AAAED,oBAAAA,EAAE,EAAE,CAAN;AAASC,oBAAAA,EAAE,EAAE;AAAb,mBAAxD;AAAA,0CACE,QAAC,SAAD,OACMH,aAAa,CAAC,cAAD,CADnB;AAEE,oBAAA,OAAO,EAAC,UAFV;AAGE,oBAAA,KAAK,EAAE;AAAEI,sBAAAA,KAAK,EAAE;AAAT,qBAHT,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,OAApB;AAA4B,oBAAA,SAAS,EAAC,KAAtC;AAA4C,oBAAA,KAAK,EAAE;AAAEE,sBAAAA,UAAU,EAAE;AAAd,qBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnDJ,eAsEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEJ,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEG,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAE,CAAhB;AAAA,0CACE,QAAC,KAAD;AAAO,oBAAA,SAAS,EAAE;AAAEJ,sBAAAA,EAAE,EAAE,QAAN;AAAgBC,sBAAAA,EAAE,EAAE;AAApB,qBAAlB;AAA+C,oBAAA,OAAO,EAAE;AAAED,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,EAAE,EAAE;AAAb,qBAAxD;AAAA,4CACE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,OAApB;AAA4B,sBAAA,SAAS,EAAC,KAAtC;AAA4C,sBAAA,KAAK,EAAE;AAAEG,wBAAAA,UAAU,EAAE;AAAd,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,QAAC,SAAD,OACMN,aAAa,CAAC,UAAD,CADnB;AAEE,sBAAA,OAAO,EAAC,UAFV;AAGE,sBAAA,KAAK,EAAE;AAAEI,wBAAAA,KAAK,EAAE;AAAT,uBAHT,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAaE,QAAC,KAAD;AAAO,oBAAA,SAAS,EAAE;AAAEF,sBAAAA,EAAE,EAAE,QAAN;AAAgBC,sBAAAA,EAAE,EAAE;AAApB,qBAAlB;AAA+C,oBAAA,OAAO,EAAE;AAAED,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,EAAE,EAAE;AAAb,qBAAxD;AAAA,4CACE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,OAApB;AAA4B,sBAAA,SAAS,EAAC,KAAtC;AAA4C,sBAAA,KAAK,EAAE;AAAEG,wBAAAA,UAAU,EAAE;AAAd,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,QAAC,SAAD,OACMN,aAAa,CAAC,UAAD,CADnB;AAEE,sBAAA,OAAO,EAAC,UAFV;AAGE,sBAAA,KAAK,EAAE;AAAEI,wBAAAA,KAAK,EAAE;AAAT,uBAHT,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,4BAJF,eAWE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,OAApB;AAA4B,sBAAA,SAAS,EAAC,KAAtC;AAA4C,sBAAA,KAAK,EAAE;AAAEE,wBAAAA,UAAU,EAAE;AAAd,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtEF,eA0GE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,OAAO,EAAE,MAAlB;AAA0BC,kBAAAA,cAAc,EAAE;AAA1C,iBAAT;AAAA,uCACE,QAAC,aAAD;AAAe,kBAAA,IAAI,EAAC,QAApB;AAA6B,kBAAA,OAAO,EAAC,WAArC;AAAiD,kBAAA,OAAO,EAAEX,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4HD","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Typography, TextareaAutosize, TextField } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// utils\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// ----------------------------------------------------------------------\n\nexport default function AnnouncementPostForm() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: { message: '', posted_at: 'public', publisher: 'administrator' },\n    validationSchema: itemValidation,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await fakeRequest(500);\n\n        await axios.put('/chat/announcementpost/', values);\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successful', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n  // console.log(values);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={2}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextareaAutosize\n                    {...getFieldProps('message')}\n                    maxRows={20}\n                    minRows={6}\n                    aria-label=\"Post Public Announcement\"\n                    placeholder=\"text input(max. 2000 words)\"\n                    style={{ width: '100%', padding: '10px' }}\n                    // error={Boolean(touched.message && errors.message)}\n                    // helperText={touched.message && errors.message}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 1.5 }}>\n                    Add pictures (max. 9) from hard-disk.\n                  </Typography>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 10, sm: 8 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Post at\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('posted_at')}\n                    aria-label=\"Posted at\"\n                    // error={Boolean(touched.posted_at && errors.posted_at)}\n                    // helperText={touched.posted_at && errors.posted_at}\n                  >\n                    <FormControlLabel value=\"public\" control={<Radio />} label=\"Public chat room\" />\n                    <FormControlLabel value=\"top\" control={<Radio />} label=\"Top column\" />\n                  </RadioGroup>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 8, sm: 5 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Publisher\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('publisher')}\n                    aria-label=\"Publisher\"\n                    // error={Boolean(touched.publisher && errors.publisher)}\n                    // helperText={touched.publisher && errors.publisher}\n                  >\n                    <FormControlLabel value=\"administrator\" control={<Radio />} label=\"App administrator (default)\" />\n                    <FormControlLabel value=\"user\" control={<Radio />} label=\"User email\" />\n                  </RadioGroup>\n                </Stack>\n\n                {values.publisher === 'user' && (\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 18, sm: 15 }}>\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                      &nbsp;\n                    </Typography>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <TextField\n                        {...getFieldProps('poster_email')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        // error={Boolean(touched.poster_email && errors.poster_email)}\n                        // helperText={touched.poster_email && errors.poster_email}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        (announcement post by user's name/avatar)\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <AutoAwesomeSharpIcon />\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Range Setting\n                  </Typography>\n                  <Stack spacing={1}>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Center (longitude, latitude)\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('position')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        // error={Boolean(touched.position && errors.position)}\n                        // helperText={touched.position && errors.position}\n                      />\n                    </Stack>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Cover people\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('coverage')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        // error={Boolean(touched.coverage && errors.coverage)}\n                        // helperText={touched.coverage && errors.coverage}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        person（ between 0~1 million)\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    SEND MESSAGE\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}