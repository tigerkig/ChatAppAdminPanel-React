{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\privatechat\\\\ChatMessageItem.js\";\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns'; // material\n\nimport { styled } from '@material-ui/core/styles';\nimport { Avatar, Box, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport { serverConfig } from '../../../config'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3)\n}));\nconst ContentStyle = styled('div')(({\n  theme\n}) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral\n}));\nconst InfoStyle = styled(Typography)(({\n  theme\n}) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary\n}));\nconst MessageImgStyle = styled('img')(({\n  theme\n}) => ({\n  height: 200,\n  minWidth: 296,\n  width: '100%',\n  cursor: 'pointer',\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadius\n})); // ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func\n};\nexport default function ChatMessageItem({\n  message,\n  conversation,\n  onOpenLightbox,\n  ...other\n}) {\n  const {\n    user\n  } = useAuth();\n  const sender = conversation.users.find(user => user._id === message.sender_id);\n  const senderDetails = message.sender_id === user._id ? {\n    type: 'me'\n  } : {\n    avatar: `${serverConfig.baseUrl}/user/img-src/${sender.avatarUrl}`,\n    name: sender.name\n  };\n  const isMe = senderDetails.type === 'me';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n  return /*#__PURE__*/_jsxDEV(RootStyle, { ...other,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        ...(isMe && {\n          ml: 'auto'\n        })\n      },\n      children: [senderDetails.type !== 'me' && /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: senderDetails.name,\n        src: senderDetails.avatar,\n        sx: {\n          width: 32,\n          height: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(InfoStyle, {\n          noWrap: true,\n          variant: \"caption\",\n          sx: { ...(isMe && {\n              justifyContent: 'flex-end'\n            })\n          },\n          children: [!isMe && `${firstName},`, \"\\xA0\", formatDistanceToNowStrict(new Date(message.createdAt), {\n            addSuffix: true\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentStyle, {\n          sx: { ...(isMe && {\n              color: 'grey.800',\n              bgcolor: 'primary.lighter'\n            })\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), message.imgs.map(img => /*#__PURE__*/_jsxDEV(MessageImgStyle, {\n            alt: \"attachment\",\n            src: `${serverConfig.baseUrl}/message/img-src/${img}`,\n            onClick: () => onOpenLightbox(img)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/privatechat/ChatMessageItem.js"],"names":["PropTypes","formatDistanceToNowStrict","styled","Avatar","Box","Typography","useAuth","serverConfig","RootStyle","theme","display","marginBottom","spacing","ContentStyle","maxWidth","padding","marginTop","borderRadius","shape","backgroundColor","palette","background","neutral","InfoStyle","color","text","secondary","MessageImgStyle","height","minWidth","width","cursor","objectFit","ChatMessageItem","propTypes","message","object","isRequired","conversation","onOpenLightbox","func","other","user","sender","users","find","_id","sender_id","senderDetails","type","avatar","baseUrl","avatarUrl","name","isMe","firstName","split","ml","justifyContent","Date","createdAt","addSuffix","bgcolor","imgs","map","img"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Avatar, Box, Typography } from '@material-ui/core';\n\nimport useAuth from '../../../hooks/useAuth';\n\nimport { serverConfig } from '../../../config';\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary\n}));\n\nconst MessageImgStyle = styled('img')(({ theme }) => ({\n  height: 200,\n  minWidth: 296,\n  width: '100%',\n  cursor: 'pointer',\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadius\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox, ...other }) {\n  const { user } = useAuth();\n  const sender = conversation.users.find((user) => user._id === message.sender_id);\n  const senderDetails =\n    message.sender_id === user._id\n      ? { type: 'me' }\n      : { avatar: `${serverConfig.baseUrl}/user/img-src/${sender.avatarUrl}`, name: sender.name };\n\n  const isMe = senderDetails.type === 'me';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle {...other}>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto'\n          })\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32 }} />\n        )}\n\n        <Box sx={{ ml: 2 }}>\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && {\n                color: 'grey.800',\n                bgcolor: 'primary.lighter'\n              })\n            }}\n          >\n            <Typography variant=\"body2\">{message.message}</Typography>\n            {message.imgs.map((img) => (\n              <MessageImgStyle\n                alt=\"attachment\"\n                src={`${serverConfig.baseUrl}/message/img-src/${img}`}\n                onClick={() => onOpenLightbox(img)}\n              />\n            ))}\n          </ContentStyle>\n        </Box>\n      </Box>\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}