{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\privatechat\\\\ChatConversationList.js\";\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom'; // material\n\nimport { List } from '@material-ui/core'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport ChatConversationItem from './ChatConversationItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\nexport default function ChatConversationList({\n  conversations,\n  isOpenSidebar,\n  activeConversationId,\n  ...other\n}) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = conversationId => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation._id;\n    } else {\n      const otherParticipant = conversation.participants.find(participant => participant._id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n      conversationKey = otherParticipant.username;\n    }\n\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    disablePadding: true,\n    ...other,\n    children: conversations.allIds.map(conversationId => /*#__PURE__*/_jsxDEV(ChatConversationItem, {\n      isOpenSidebar: isOpenSidebar,\n      conversation: conversations.byId[conversationId],\n      isSelected: activeConversationId === conversationId,\n      onSelectConversation: () => handleSelectConversation(conversationId)\n    }, conversationId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/privatechat/ChatConversationList.js"],"names":["PropTypes","useNavigate","List","PATH_DASHBOARD","ChatConversationItem","ChatConversationList","propTypes","conversations","object","isOpenSidebar","bool","activeConversationId","string","other","navigate","handleSelectConversation","conversationId","conversationKey","conversation","byId","type","_id","otherParticipant","participants","find","participant","username","chat","root","allIds","map"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CAEA;;;AAEAC,oBAAoB,CAACC,SAArB,GAAiC;AAC/BC,EAAAA,aAAa,EAAEP,SAAS,CAACQ,MADM;AAE/BC,EAAAA,aAAa,EAAET,SAAS,CAACU,IAFM;AAG/BC,EAAAA,oBAAoB,EAAEX,SAAS,CAACY;AAHD,CAAjC;AAMA,eAAe,SAASP,oBAAT,CAA8B;AAAEE,EAAAA,aAAF;AAAiBE,EAAAA,aAAjB;AAAgCE,EAAAA,oBAAhC;AAAsD,KAAGE;AAAzD,CAA9B,EAAgG;AAC7G,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,wBAAwB,GAAIC,cAAD,IAAoB;AACnD,QAAIC,eAAe,GAAG,EAAtB;AACA,UAAMC,YAAY,GAAGX,aAAa,CAACY,IAAd,CAAmBH,cAAnB,CAArB;;AACA,QAAIE,YAAY,CAACE,IAAb,KAAsB,OAA1B,EAAmC;AACjCH,MAAAA,eAAe,GAAGC,YAAY,CAACG,GAA/B;AACD,KAFD,MAEO;AACL,YAAMC,gBAAgB,GAAGJ,YAAY,CAACK,YAAb,CAA0BC,IAA1B,CACtBC,WAAD,IAAiBA,WAAW,CAACJ,GAAZ,KAAoB,wCADd,CAAzB;AAGAJ,MAAAA,eAAe,GAAGK,gBAAgB,CAACI,QAAnC;AACD;;AACDZ,IAAAA,QAAQ,CAAE,GAAEX,cAAc,CAACwB,IAAf,CAAoBC,IAAK,IAAGX,eAAgB,EAAhD,CAAR;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA,OAAyBJ,KAAzB;AAAA,cACGN,aAAa,CAACsB,MAAd,CAAqBC,GAArB,CAA0Bd,cAAD,iBACxB,QAAC,oBAAD;AAEE,MAAA,aAAa,EAAEP,aAFjB;AAGE,MAAA,YAAY,EAAEF,aAAa,CAACY,IAAd,CAAmBH,cAAnB,CAHhB;AAIE,MAAA,UAAU,EAAEL,oBAAoB,KAAKK,cAJvC;AAKE,MAAA,oBAAoB,EAAE,MAAMD,wBAAwB,CAACC,cAAD;AALtD,OACOA,cADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { List } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation._id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant._id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      conversationKey = otherParticipant.username;\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  return (\n    <List disablePadding {...other}>\n      {conversations.allIds.map((conversationId) => (\n        <ChatConversationItem\n          key={conversationId}\n          isOpenSidebar={isOpenSidebar}\n          conversation={conversations.byId[conversationId]}\n          isSelected={activeConversationId === conversationId}\n          onSelectConversation={() => handleSelectConversation(conversationId)}\n        />\n      ))}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}