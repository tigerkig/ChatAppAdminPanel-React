{"ast":null,"code":"import { useState, useEffect } from 'react'; // ----------------------------------------------------------------------\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue === null ? defaultValue : JSON.parse(storedValue);\n  });\n  useEffect(() => {\n    const listener = e => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener('storage', listener);\n    return () => {\n      window.removeEventListener('storage', listener);\n    };\n  }, [key, defaultValue]);\n\n  const setValueInLocalStorage = newValue => {\n    setValue(currentValue => {\n      const result = typeof newValue === 'function' ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  return [value, setValueInLocalStorage];\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","useLocalStorage","key","defaultValue","value","setValue","storedValue","localStorage","getItem","JSON","parse","listener","e","storageArea","newValue","window","addEventListener","removeEventListener","setValueInLocalStorage","currentValue","result","setItem","stringify"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AACzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAM;AACvC,UAAMO,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAApB;AACA,WAAOI,WAAW,KAAK,IAAhB,GAAuBH,YAAvB,GAAsCM,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAA7C;AACD,GAHiC,CAAlC;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAIA,CAAC,CAACC,WAAF,KAAkBN,YAAlB,IAAkCK,CAAC,CAACV,GAAF,KAAUA,GAAhD,EAAqD;AACnDG,QAAAA,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWE,CAAC,CAACE,QAAb,CAAD,CAAR;AACD;AACF,KAJD;;AAKAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,QAAnC;AAEA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,QAAtC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACT,GAAD,EAAMC,YAAN,CAXM,CAAT;;AAaA,QAAMe,sBAAsB,GAAIJ,QAAD,IAAc;AAC3CT,IAAAA,QAAQ,CAAEc,YAAD,IAAkB;AACzB,YAAMC,MAAM,GAAG,OAAON,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACK,YAAD,CAAzC,GAA0DL,QAAzE;AACAP,MAAAA,YAAY,CAACc,OAAb,CAAqBnB,GAArB,EAA0BO,IAAI,CAACa,SAAL,CAAeF,MAAf,CAA1B;AACA,aAAOA,MAAP;AACD,KAJO,CAAR;AAKD,GAND;;AAQA,SAAO,CAAChB,KAAD,EAAQc,sBAAR,CAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue === null ? defaultValue : JSON.parse(storedValue);\n  });\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.storageArea === localStorage && e.key === key) {\n        setValue(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener('storage', listener);\n\n    return () => {\n      window.removeEventListener('storage', listener);\n    };\n  }, [key, defaultValue]);\n\n  const setValueInLocalStorage = (newValue) => {\n    setValue((currentValue) => {\n      const result = typeof newValue === 'function' ? newValue(currentValue) : newValue;\n      localStorage.setItem(key, JSON.stringify(result));\n      return result;\n    });\n  };\n\n  return [value, setValueInLocalStorage];\n}\n"]},"metadata":{},"sourceType":"module"}