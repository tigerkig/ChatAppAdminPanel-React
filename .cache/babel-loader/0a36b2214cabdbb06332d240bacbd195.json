{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\privatechat\\\\ChatConversationList.js\";\nimport PropTypes from 'prop-types';\nimport { useNavigate, useParams } from 'react-router-dom'; // material\n\nimport { List } from '@material-ui/core'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport ChatConversationItem from './ChatConversationItem'; // redux\n\nimport { useSelector } from '../../../redux/store'; // hooks\n\nimport useAuth from '../../../hooks/useAuth'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\nexport default function ChatConversationList({\n  conversations,\n  isOpenSidebar,\n  activeConversationId,\n  ...other\n}) {\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    userList\n  } = useSelector(state => state.user);\n  const {\n    opponentId\n  } = useParams();\n  const localUsers = userList.filter(value => value._id !== user._id);\n\n  const handleSelectConversation = conversationUserId => {\n    navigate(`${PATH_DASHBOARD.chat.private}/${conversationUserId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    disablePadding: true,\n    ...other,\n    children: localUsers.map(value => {\n      const conversation = conversations.filter(conversation => {\n        const userIds = conversation.users.map(user => user._id);\n        return userIds.indexOf(value._id) > -1;\n      });\n\n      /*#__PURE__*/\n      _jsxDEV(ChatConversationItem, {\n        opponent: value,\n        isOpenSidebar: isOpenSidebar,\n        conversation: conversation,\n        isSelected: opponentId === value._id,\n        onSelectConversation: () => handleSelectConversation(value._id)\n      }, value._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/privatechat/ChatConversationList.js"],"names":["PropTypes","useNavigate","useParams","List","PATH_DASHBOARD","ChatConversationItem","useSelector","useAuth","ChatConversationList","propTypes","conversations","object","isOpenSidebar","bool","activeConversationId","string","other","navigate","user","userList","state","opponentId","localUsers","filter","value","_id","handleSelectConversation","conversationUserId","chat","private","map","conversation","userIds","users","indexOf"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CACA;;AACA,SAASC,WAAT,QAA4B,sBAA5B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAEA;;;AAEAC,oBAAoB,CAACC,SAArB,GAAiC;AAC/BC,EAAAA,aAAa,EAAEV,SAAS,CAACW,MADM;AAE/BC,EAAAA,aAAa,EAAEZ,SAAS,CAACa,IAFM;AAG/BC,EAAAA,oBAAoB,EAAEd,SAAS,CAACe;AAHD,CAAjC;AAMA,eAAe,SAASP,oBAAT,CAA8B;AAAEE,EAAAA,aAAF;AAAiBE,EAAAA,aAAjB;AAAgCE,EAAAA,oBAAhC;AAAsD,KAAGE;AAAzD,CAA9B,EAAgG;AAC7G,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAWX,OAAO,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAeb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAhC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAiBnB,SAAS,EAAhC;AACA,QAAMoB,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcP,IAAI,CAACO,GAA9C,CAAnB;;AAEA,QAAMC,wBAAwB,GAAIC,kBAAD,IAAwB;AACvDV,IAAAA,QAAQ,CAAE,GAAEb,cAAc,CAACwB,IAAf,CAAoBC,OAAQ,IAAGF,kBAAmB,EAAtD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA,OAAyBX,KAAzB;AAAA,cACGM,UAAU,CAACQ,GAAX,CAAgBN,KAAD,IAAW;AACzB,YAAMO,YAAY,GAAGrB,aAAa,CAACa,MAAd,CAAsBQ,YAAD,IAAkB;AAC1D,cAAMC,OAAO,GAAGD,YAAY,CAACE,KAAb,CAAmBH,GAAnB,CAAwBZ,IAAD,IAAUA,IAAI,CAACO,GAAtC,CAAhB;AACA,eAAOO,OAAO,CAACE,OAAR,CAAgBV,KAAK,CAACC,GAAtB,IAA6B,CAAC,CAArC;AACD,OAHoB,CAArB;;AAIA;AAAA,cAAC,oBAAD;AAEE,QAAA,QAAQ,EAAED,KAFZ;AAGE,QAAA,aAAa,EAAEZ,aAHjB;AAIE,QAAA,YAAY,EAAEmB,YAJhB;AAKE,QAAA,UAAU,EAAEV,UAAU,KAAKG,KAAK,CAACC,GALnC;AAME,QAAA,oBAAoB,EAAE,MAAMC,wBAAwB,CAACF,KAAK,CAACC,GAAP;AANtD,SACOD,KAAK,CAACC,GADb;AAAA;AAAA;AAAA;AAAA;AAQD,KAbA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD","sourcesContent":["import PropTypes from 'prop-types';\nimport { useNavigate, useParams } from 'react-router-dom';\n// material\nimport { List } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatConversationItem from './ChatConversationItem';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { userList } = useSelector((state) => state.user);\n  const { opponentId } = useParams();\n  const localUsers = userList.filter((value) => value._id !== user._id);\n\n  const handleSelectConversation = (conversationUserId) => {\n    navigate(`${PATH_DASHBOARD.chat.private}/${conversationUserId}`);\n  };\n\n  return (\n    <List disablePadding {...other}>\n      {localUsers.map((value) => {\n        const conversation = conversations.filter((conversation) => {\n          const userIds = conversation.users.map((user) => user._id);\n          return userIds.indexOf(value._id) > -1;\n        });\n        <ChatConversationItem\n          key={value._id}\n          opponent={value}\n          isOpenSidebar={isOpenSidebar}\n          conversation={conversation}\n          isSelected={opponentId === value._id}\n          onSelectConversation={() => handleSelectConversation(value._id)}\n        />;\n      })}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}