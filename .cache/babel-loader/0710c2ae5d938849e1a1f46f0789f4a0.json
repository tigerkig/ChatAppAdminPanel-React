{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\announcement\\\\PostForm.js\";\nimport { useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Typography, TextareaAutosize, TextField, IconButton, Radio, RadioGroup, FormControlLabel, styled, ImageList, ImageListItem, ImageListItemBar } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate'; // utils\n\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnnouncementPostForm() {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const fileInputRef = useRef(null);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [uploadImgs, setUploadImgs] = useState(null);\n\n  const handleAttach = () => {\n    if (imageFiles.length === 9) {\n      enqueueSnackbar('Uploaded pictures (max. 9) from hard-disk.', {\n        variant: 'info'\n      });\n      return;\n    }\n\n    fileInputRef.current.click();\n  };\n\n  const handleImageUpload = e => {\n    // console.log(e.target.files);\n    const fileObj = [];\n    let fileArray = [];\n\n    if (imageFiles.length > 0) {\n      fileArray = imageFiles.map(file => file);\n    }\n\n    const formData = uploadImgs || new FormData();\n    fileObj.push(e.target.files);\n    const startIndex = imageFiles.length > 0 && imageFiles[imageFiles.length - 1].index + 1 || 0;\n\n    for (let i = 0, index = startIndex; i < fileObj[0].length && fileArray.length < 9; i += 1, index += 1) {\n      const file = fileObj[0][i];\n      formData.append(`img[${index}]`, file, file.name);\n      fileArray.push({\n        index,\n        name: file.name,\n        url: URL.createObjectURL(file)\n      });\n    }\n\n    console.log(fileArray, formData);\n    setImageFiles(fileArray);\n    setUploadImgs(formData);\n  };\n\n  const handleCloseImage = index => {\n    const filterFiles = imageFiles.filter(file => file.index !== index);\n    const formData = uploadImgs;\n    formData.delete(`img[${index}]`);\n    setImageFiles(filterFiles);\n    setUploadImgs(formData);\n  };\n\n  const MessageImgStyle = styled('img')(({\n    theme\n  }) => ({\n    height: 80,\n    minWidth: 80,\n    width: 'auto',\n    cursor: 'pointer',\n    objectFit: 'cover',\n    borderRadius: theme.shape.borderRadius\n  }));\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required'),\n    position: Yup.string().required('This field is required'),\n    coverage: Yup.string().required('This field is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      message: '',\n      posted_at: 'public',\n      publisher: 'admin',\n      position: '',\n      coverage: 150\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        let imgs = [];\n\n        if (uploadImgs) {\n          const res = await axios.post('/roomMessages/upload_multi_imgs', uploadImgs);\n          imgs = res.data.data;\n          setImageFiles([]);\n          setUploadImgs(null);\n        }\n\n        values.imgs = imgs;\n        await axios.post('/roomMessages/announcement', values);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successfully', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        enqueueSnackbar(`Error occured: ${error.message}`, {\n          variant: 'error'\n        });\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik; // console.log(values);\n\n  console.log(imageFiles);\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextareaAutosize, { ...getFieldProps('message'),\n                  maxRows: 20,\n                  minRows: 6,\n                  \"aria-label\": \"Post Public Announcement\",\n                  placeholder: \"text input(max. 2000 words)\",\n                  style: {\n                    width: '100%',\n                    padding: '10px'\n                  } // inputProps={{ maxLength: 2000 }}\n                  // error={Boolean(touched.message && errors.message)}\n                  // helperText={touched.message && errors.message}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 3\n                  },\n                  children: \"Add pictures (max. 9) from hard-disk.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: handleAttach,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: roundAddPhotoAlternate,\n                    width: 24,\n                    height: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), imageFiles.length > 0 && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                sx: {\n                  mt: 1,\n                  mb: 1\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: imageFiles.map(img =>\n                /*#__PURE__*/\n                // <MessageImgStyle key={`${img.index}`} alt=\"attachment\" src={`${img.url}`} />\n                _jsxDEV(ImageListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(MessageImgStyle, {\n                    alt: \"attachment\",\n                    src: `${img.url}`\n                  }, `${img.index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n                    sx: {\n                      background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n                    } // title={item.title}\n                    ,\n                    position: \"top\",\n                    actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                      sx: {\n                        color: 'white'\n                      },\n                      \"aria-label\": \"close\",\n                      onClick: e => handleCloseImage(img.index),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 29\n                    }, this),\n                    actionPosition: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)]\n                }, `${img.index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 10,\n                  sm: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Post at\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('posted_at'),\n                  \"aria-label\": \"Posted at\" // error={Boolean(touched.posted_at && errors.posted_at)}\n                  // helperText={touched.posted_at && errors.posted_at}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"public\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 63\n                    }, this),\n                    label: \"Public chat room\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"top\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 60\n                    }, this),\n                    label: \"Top column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 8,\n                  sm: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Publisher\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('publisher'),\n                  \"aria-label\": \"Publisher\" // error={Boolean(touched.publisher && errors.publisher)}\n                  // helperText={touched.publisher && errors.publisher}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"admin\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 62\n                    }, this),\n                    label: \"App administrator (default)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"user\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 61\n                    }, this),\n                    label: \"User email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), values.publisher === 'user' && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 18,\n                  sm: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: {\n                    xs: 'column',\n                    sm: 'row'\n                  },\n                  spacing: {\n                    xs: 3,\n                    sm: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('poster_email'),\n                    variant: \"standard\",\n                    style: {\n                      width: 200\n                    } // error={Boolean(touched.poster_email && errors.poster_email)}\n                    // helperText={touched.poster_email && errors.poster_email}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"div\",\n                    style: {\n                      lineHeight: 2\n                    },\n                    children: \"(announcement post by user's name/avatar)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Range Setting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Center (longitude, latitude)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('position'),\n                      variant: \"standard\",\n                      style: {\n                        width: 300\n                      },\n                      error: Boolean(touched.position && errors.position),\n                      helperText: touched.position && errors.position\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Cover people\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('coverage'),\n                      variant: \"standard\",\n                      style: {\n                        width: 200\n                      },\n                      error: Boolean(touched.coverage && errors.coverage),\n                      helperText: touched.coverage && errors.coverage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"person\\uFF08 between 0 ~ 1 million )\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 10,\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  loading: isSubmitting,\n                  children: \"SEND MESSAGE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      ref: fileInputRef,\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/announcement/PostForm.js"],"names":["useRef","useState","Yup","PropTypes","Icon","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Typography","TextareaAutosize","TextField","IconButton","Radio","RadioGroup","FormControlLabel","styled","ImageList","ImageListItem","ImageListItemBar","CloseIcon","roundAddPhotoAlternate","axios","fakeRequest","AnnouncementPostForm","enqueueSnackbar","fileInputRef","imageFiles","setImageFiles","uploadImgs","setUploadImgs","handleAttach","length","variant","current","click","handleImageUpload","e","fileObj","fileArray","map","file","formData","FormData","push","target","files","startIndex","index","i","append","name","url","URL","createObjectURL","console","log","handleCloseImage","filterFiles","filter","delete","MessageImgStyle","theme","height","minWidth","width","cursor","objectFit","borderRadius","shape","itemValidation","object","message","string","required","position","coverage","formik","enableReinitialize","initialValues","posted_at","publisher","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","imgs","res","post","data","error","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","padding","lineHeight","mt","mb","img","background","color","Boolean","display","justifyContent"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@material-ui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Typography,\n  TextareaAutosize,\n  TextField,\n  IconButton,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  styled,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// utils\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// ----------------------------------------------------------------------\n\nexport default function AnnouncementPostForm() {\n  const { enqueueSnackbar } = useSnackbar();\n  const fileInputRef = useRef(null);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [uploadImgs, setUploadImgs] = useState(null);\n\n  const handleAttach = () => {\n    if (imageFiles.length === 9) {\n      enqueueSnackbar('Uploaded pictures (max. 9) from hard-disk.', { variant: 'info' });\n      return;\n    }\n    fileInputRef.current.click();\n  };\n\n  const handleImageUpload = (e) => {\n    // console.log(e.target.files);\n    const fileObj = [];\n    let fileArray = [];\n    if (imageFiles.length > 0) {\n      fileArray = imageFiles.map((file) => file);\n    }\n    const formData = uploadImgs || new FormData();\n    fileObj.push(e.target.files);\n    const startIndex = (imageFiles.length > 0 && imageFiles[imageFiles.length - 1].index + 1) || 0;\n    for (let i = 0, index = startIndex; i < fileObj[0].length && fileArray.length < 9; i += 1, index += 1) {\n      const file = fileObj[0][i];\n      formData.append(`img[${index}]`, file, file.name);\n      fileArray.push({ index, name: file.name, url: URL.createObjectURL(file) });\n    }\n    console.log(fileArray, formData);\n    setImageFiles(fileArray);\n    setUploadImgs(formData);\n  };\n\n  const handleCloseImage = (index) => {\n    const filterFiles = imageFiles.filter((file) => file.index !== index);\n    const formData = uploadImgs;\n    formData.delete(`img[${index}]`);\n    setImageFiles(filterFiles);\n    setUploadImgs(formData);\n  };\n\n  const MessageImgStyle = styled('img')(({ theme }) => ({\n    height: 80,\n    minWidth: 80,\n    width: 'auto',\n    cursor: 'pointer',\n    objectFit: 'cover',\n    borderRadius: theme.shape.borderRadius\n  }));\n\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required'),\n    position: Yup.string().required('This field is required'),\n    coverage: Yup.string().required('This field is required')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      message: '',\n      posted_at: 'public',\n      publisher: 'admin',\n      position: '',\n      coverage: 150\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await fakeRequest(500);\n\n        let imgs = [];\n\n        if (uploadImgs) {\n          const res = await axios.post('/roomMessages/upload_multi_imgs', uploadImgs);\n          imgs = res.data.data;\n          setImageFiles([]);\n          setUploadImgs(null);\n        }\n\n        values.imgs = imgs;\n        await axios.post('/roomMessages/announcement', values);\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successfully', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        enqueueSnackbar(`Error occured: ${error.message}`, { variant: 'error' });\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n  // console.log(values);\n\n  console.log(imageFiles);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={2}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextareaAutosize\n                    {...getFieldProps('message')}\n                    maxRows={20}\n                    minRows={6}\n                    aria-label=\"Post Public Announcement\"\n                    placeholder=\"text input(max. 2000 words)\"\n                    style={{ width: '100%', padding: '10px' }}\n                    // inputProps={{ maxLength: 2000 }}\n                    // error={Boolean(touched.message && errors.message)}\n                    // helperText={touched.message && errors.message}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 3 }}>\n                    Add pictures (max. 9) from hard-disk.\n                  </Typography>\n                  <IconButton size=\"small\" onClick={handleAttach}>\n                    <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\n                  </IconButton>\n                </Stack>\n\n                {imageFiles.length > 0 && (\n                  <Stack direction={{ xs: 'column', sm: 'row' }} sx={{ mt: 1, mb: 1 }} spacing={{ xs: 3, sm: 2 }}>\n                    {/* <ImageList sx={{ width: '100%', height: 50 }} cols={10} rowHeight={164}> */}\n                    {imageFiles.map((img) => (\n                      // <MessageImgStyle key={`${img.index}`} alt=\"attachment\" src={`${img.url}`} />\n                      <ImageListItem key={`${img.index}`}>\n                        <MessageImgStyle key={`${img.index}`} alt=\"attachment\" src={`${img.url}`} />\n                        <ImageListItemBar\n                          sx={{\n                            background:\n                              'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n                              'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n                          }}\n                          // title={item.title}\n                          position=\"top\"\n                          actionIcon={\n                            <IconButton\n                              sx={{ color: 'white' }}\n                              aria-label=\"close\"\n                              onClick={(e) => handleCloseImage(img.index)}\n                              size=\"small\"\n                            >\n                              <CloseIcon />\n                            </IconButton>\n                          }\n                          actionPosition=\"right\"\n                        />\n                      </ImageListItem>\n                    ))}\n                    {/* </ImageList> */}\n                  </Stack>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 10, sm: 8 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Post at\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('posted_at')}\n                    aria-label=\"Posted at\"\n                    // error={Boolean(touched.posted_at && errors.posted_at)}\n                    // helperText={touched.posted_at && errors.posted_at}\n                  >\n                    <FormControlLabel value=\"public\" control={<Radio />} label=\"Public chat room\" />\n                    <FormControlLabel value=\"top\" control={<Radio />} label=\"Top column\" />\n                  </RadioGroup>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 8, sm: 5 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Publisher\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('publisher')}\n                    aria-label=\"Publisher\"\n                    // error={Boolean(touched.publisher && errors.publisher)}\n                    // helperText={touched.publisher && errors.publisher}\n                  >\n                    <FormControlLabel value=\"admin\" control={<Radio />} label=\"App administrator (default)\" />\n                    <FormControlLabel value=\"user\" control={<Radio />} label=\"User email\" />\n                  </RadioGroup>\n                </Stack>\n\n                {values.publisher === 'user' && (\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 18, sm: 15 }}>\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                      &nbsp;\n                    </Typography>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <TextField\n                        {...getFieldProps('poster_email')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        // error={Boolean(touched.poster_email && errors.poster_email)}\n                        // helperText={touched.poster_email && errors.poster_email}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        (announcement post by user's name/avatar)\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Range Setting\n                  </Typography>\n                  <Stack spacing={1}>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Center (longitude, latitude)\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('position')}\n                        variant=\"standard\"\n                        style={{ width: 300 }}\n                        error={Boolean(touched.position && errors.position)}\n                        helperText={touched.position && errors.position}\n                      />\n                    </Stack>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Cover people\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('coverage')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        error={Boolean(touched.coverage && errors.coverage)}\n                        helperText={touched.coverage && errors.coverage}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        person（ between 0 ~ 1 million )\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Stack>\n\n                <Box sx={{ mt: 10, display: 'flex', justifyContent: 'center' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    SEND MESSAGE\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n      <input\n        type=\"file\"\n        multiple\n        ref={fileInputRef}\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        onChange={handleImageUpload}\n      />\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}