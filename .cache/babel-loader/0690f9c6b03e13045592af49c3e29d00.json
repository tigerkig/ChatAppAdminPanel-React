{"ast":null,"code":"/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  var KEYWORDS = [\"exports\", \"register\", \"file\", \"shl\", \"array\", \"record\", \"property\", \"for\", \"mod\", \"while\", \"set\", \"ally\", \"label\", \"uses\", \"raise\", \"not\", \"stored\", \"class\", \"safecall\", \"var\", \"interface\", \"or\", \"private\", \"static\", \"exit\", \"index\", \"inherited\", \"to\", \"else\", \"stdcall\", \"override\", \"shr\", \"asm\", \"far\", \"resourcestring\", \"finalization\", \"packed\", \"virtual\", \"out\", \"and\", \"protected\", \"library\", \"do\", \"xorwrite\", \"goto\", \"near\", \"function\", \"end\", \"div\", \"overload\", \"object\", \"unit\", \"begin\", \"string\", \"on\", \"inline\", \"repeat\", \"until\", \"destructor\", \"write\", \"message\", \"program\", \"with\", \"read\", \"initialization\", \"except\", \"default\", \"nil\", \"if\", \"case\", \"cdecl\", \"in\", \"downto\", \"threadvar\", \"of\", \"try\", \"pascal\", \"const\", \"external\", \"constructor\", \"type\", \"public\", \"then\", \"implementation\", \"finally\", \"published\", \"procedure\", \"absolute\", \"reintroduce\", \"operator\", \"as\", \"is\", \"abstract\", \"alias\", \"assembler\", \"bitpacked\", \"break\", \"continue\", \"cppdecl\", \"cvar\", \"enumerator\", \"experimental\", \"platform\", \"deprecated\", \"unimplemented\", \"dynamic\", \"export\", \"far16\", \"forward\", \"generic\", \"helper\", \"implements\", \"interrupt\", \"iochecks\", \"local\", \"name\", \"nodefault\", \"noreturn\", \"nostackframe\", \"oldfpccall\", \"otherwise\", \"saveregisters\", \"softfloat\", \"specialize\", \"strict\", \"unaligned\", \"varargs\"];\n  var COMMENT_MODES = [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT(/\\{/, /\\}/, {\n    relevance: 0\n  }), hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n    relevance: 10\n  })];\n  var DIRECTIVE = {\n    className: 'meta',\n    variants: [{\n      begin: /\\{\\$/,\n      end: /\\}/\n    }, {\n      begin: /\\(\\*\\$/,\n      end: /\\*\\)/\n    }]\n  };\n  var STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  var NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [{\n      // Hexadecimal notation, e.g., $7F.\n      begin: '\\\\$[0-9A-Fa-f]+'\n    }, {\n      // Octal notation, e.g., &42.\n      begin: '&[0-7]+'\n    }, {\n      // Binary notation, e.g., %1010.\n      begin: '%[01]+'\n    }]\n  };\n  var CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [hljs.TITLE_MODE, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)\n    }, DIRECTIVE].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: ['dpr', 'dfm', 'pas', 'pascal'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [STRING, CHAR_STRING, hljs.NUMBER_MODE, NUMBER, CLASS, FUNCTION, DIRECTIVE].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/node_modules/highlight.js/lib/languages/delphi.js"],"names":["delphi","hljs","KEYWORDS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","NUMBER","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","concat","name","aliases","case_insensitive","illegal","NUMBER_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS = [\n    \"exports\",\n    \"register\",\n    \"file\",\n    \"shl\",\n    \"array\",\n    \"record\",\n    \"property\",\n    \"for\",\n    \"mod\",\n    \"while\",\n    \"set\",\n    \"ally\",\n    \"label\",\n    \"uses\",\n    \"raise\",\n    \"not\",\n    \"stored\",\n    \"class\",\n    \"safecall\",\n    \"var\",\n    \"interface\",\n    \"or\",\n    \"private\",\n    \"static\",\n    \"exit\",\n    \"index\",\n    \"inherited\",\n    \"to\",\n    \"else\",\n    \"stdcall\",\n    \"override\",\n    \"shr\",\n    \"asm\",\n    \"far\",\n    \"resourcestring\",\n    \"finalization\",\n    \"packed\",\n    \"virtual\",\n    \"out\",\n    \"and\",\n    \"protected\",\n    \"library\",\n    \"do\",\n    \"xorwrite\",\n    \"goto\",\n    \"near\",\n    \"function\",\n    \"end\",\n    \"div\",\n    \"overload\",\n    \"object\",\n    \"unit\",\n    \"begin\",\n    \"string\",\n    \"on\",\n    \"inline\",\n    \"repeat\",\n    \"until\",\n    \"destructor\",\n    \"write\",\n    \"message\",\n    \"program\",\n    \"with\",\n    \"read\",\n    \"initialization\",\n    \"except\",\n    \"default\",\n    \"nil\",\n    \"if\",\n    \"case\",\n    \"cdecl\",\n    \"in\",\n    \"downto\",\n    \"threadvar\",\n    \"of\",\n    \"try\",\n    \"pascal\",\n    \"const\",\n    \"external\",\n    \"constructor\",\n    \"type\",\n    \"public\",\n    \"then\",\n    \"implementation\",\n    \"finally\",\n    \"published\",\n    \"procedure\",\n    \"absolute\",\n    \"reintroduce\",\n    \"operator\",\n    \"as\",\n    \"is\",\n    \"abstract\",\n    \"alias\",\n    \"assembler\",\n    \"bitpacked\",\n    \"break\",\n    \"continue\",\n    \"cppdecl\",\n    \"cvar\",\n    \"enumerator\",\n    \"experimental\",\n    \"platform\",\n    \"deprecated\",\n    \"unimplemented\",\n    \"dynamic\",\n    \"export\",\n    \"far16\",\n    \"forward\",\n    \"generic\",\n    \"helper\",\n    \"implements\",\n    \"interrupt\",\n    \"iochecks\",\n    \"local\",\n    \"name\",\n    \"nodefault\",\n    \"noreturn\",\n    \"nostackframe\",\n    \"oldfpccall\",\n    \"otherwise\",\n    \"saveregisters\",\n    \"softfloat\",\n    \"specialize\",\n    \"strict\",\n    \"unaligned\",\n    \"varargs\"\n  ];\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {\n      relevance: 0\n    }),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n      relevance: 10\n    })\n  ];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      },\n      {\n        begin: /\\(\\*\\$/,\n        end: /\\*\\)/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [\n      {\n        // Hexadecimal notation, e.g., $7F.\n        begin: '\\\\$[0-9A-Fa-f]+'\n      },\n      {\n        // Octal notation, e.g., &42.\n        begin: '&[0-7]+'\n      },\n      {\n        // Binary notation, e.g., %1010.\n        begin: '%[01]+'\n      }\n    ]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING,\n          DIRECTIVE\n        ].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: [\n      'dpr',\n      'dfm',\n      'pas',\n      'pascal'\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      hljs.NUMBER_MODE,\n      NUMBER,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;\n"]},"metadata":{},"sourceType":"script"}