{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\ConfirmDialog.js\";\nimport { useState } from 'react'; // material ui\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Box, IconButton, Typography } from '@material-ui/core';\nimport { Close } from '@material-ui/icons'; // import create from 'zustand';\n// const ConfirmDialog = () => {\n//   return (\n//     <Dialog open={true} maxWidth=\"sm\" fullWidth>\n//       <DialogTitle>Confirm the action</DialogTitle>\n//       <Box position=\"absolute\" top={0} right={0}>\n//         <IconButton>\n//           <Close />\n//         </IconButton>\n//       </Box>\n//       <DialogContent>\n//         <Typography>some message here</Typography>\n//       </DialogContent>\n//       <DialogActions>\n//         <Button color=\"primary\" variant=\"contained\">\n//           Cancel\n//         </Button>\n//         <Button color=\"secondary\" variant=\"contained\">\n//           Confirm\n//         </Button>\n//       </DialogActions>\n//     </Dialog>\n//   );\n// };\n// const useConfirmDialogStore = create((set) => ({\n//   message: '',\n//   onSubmit: undefined,\n//   close: () => set({ onSubmit: undefined })\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfirmDialog(message, onSubmit) {\n  const [setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // useConfirmDialogStore.setState({\n  //   message,\n  //   onSubmit\n  // });\n\n\n  return (\n    /*#__PURE__*/\n    // so it will close the dialog, if we pass it to the onClose attribute.\n    _jsxDEV(Dialog, {\n      open: Boolean(onSubmit),\n      onClose: handleClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm the action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => {\n            if (onSubmit) {\n              onSubmit();\n            }\n\n            handleClose();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/ConfirmDialog.js"],"names":["useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Box","IconButton","Typography","Close","ConfirmDialog","message","onSubmit","setOpen","handleClickOpen","handleClose","Boolean"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,UAPF,EAQEC,UARF,QASO,mBATP;AAUA,SAASC,KAAT,QAAsB,oBAAtB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AACvD,QAAM,CAACC,OAAD,IAAYb,QAAQ,CAAC,KAAD,CAA1B;;AAEA,QAAMc,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD,CAPuD,CAUvD;AACA;AACA;AACA;;;AACA;AAAA;AACE;AACA,YAAC,MAAD;AAAQ,MAAA,IAAI,EAAEG,OAAO,CAACJ,QAAD,CAArB;AAAiC,MAAA,OAAO,EAAEG,WAA1C;AAAuD,MAAA,QAAQ,EAAC,IAAhE;AAAqE,MAAA,SAAS,MAA9E;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,UAAd;AAAyB,QAAA,GAAG,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAE,CAAxC;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA,WAArB;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,aAAD;AAAA,+BACE,QAAC,UAAD;AAAA,oBAAaJ;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAC,WAAhC;AAA4C,UAAA,OAAO,EAAEI,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAIH,QAAJ,EAAc;AACZA,cAAAA,QAAQ;AACT;;AACDG,YAAAA,WAAW;AACZ,WARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA+BD","sourcesContent":["import { useState } from 'react';\n// material ui\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  IconButton,\n  Typography\n} from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\n// import create from 'zustand';\n\n// const ConfirmDialog = () => {\n//   return (\n//     <Dialog open={true} maxWidth=\"sm\" fullWidth>\n//       <DialogTitle>Confirm the action</DialogTitle>\n//       <Box position=\"absolute\" top={0} right={0}>\n//         <IconButton>\n//           <Close />\n//         </IconButton>\n//       </Box>\n//       <DialogContent>\n//         <Typography>some message here</Typography>\n//       </DialogContent>\n//       <DialogActions>\n//         <Button color=\"primary\" variant=\"contained\">\n//           Cancel\n//         </Button>\n//         <Button color=\"secondary\" variant=\"contained\">\n//           Confirm\n//         </Button>\n//       </DialogActions>\n//     </Dialog>\n//   );\n// };\n\n// const useConfirmDialogStore = create((set) => ({\n//   message: '',\n//   onSubmit: undefined,\n//   close: () => set({ onSubmit: undefined })\n// }));\n\nexport default function ConfirmDialog(message, onSubmit) {\n  const [setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  // useConfirmDialogStore.setState({\n  //   message,\n  //   onSubmit\n  // });\n  return (\n    // so it will close the dialog, if we pass it to the onClose attribute.\n    <Dialog open={Boolean(onSubmit)} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Confirm the action</DialogTitle>\n      <Box position=\"absolute\" top={0} right={0}>\n        <IconButton onClick={handleClose}>\n          <Close />\n        </IconButton>\n      </Box>\n      <DialogContent>\n        <Typography>{message}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (onSubmit) {\n              onSubmit();\n            }\n            handleClose();\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}