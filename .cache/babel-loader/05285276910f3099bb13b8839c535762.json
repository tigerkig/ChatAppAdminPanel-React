{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\pages\\\\dashboard\\\\MailList.js\";\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack5'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Card, Table, Stack, Avatar, Button, Checkbox, TableRow, TableBody, TableCell, Container, Typography, TableContainer, TablePagination } from '@material-ui/core';\nimport emailjs from 'emailjs-com'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSettingsList } from '../../redux/slices/settings';\nimport { getUserList } from '../../redux/slices/user'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth'; // components\n\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { MailListHead, MailListToolbar } from '../../components/_dashboard/mail/list';\nimport MailSendMessageDialog from '../../components/_dashboard/mail/MailSendMessageDialog'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_HEAD = [{\n  id: 'email',\n  label: 'Mail',\n  alignRight: false\n}, {\n  id: 'address',\n  label: 'Location',\n  alignRight: false\n}, {\n  id: 'coverage',\n  label: 'Coverage',\n  alignRight: false\n}, {\n  id: 'balance',\n  label: 'Balance',\n  alignRight: false\n}, {\n  id: 'credit',\n  label: 'Credit',\n  alignRight: false\n}, {\n  id: ''\n}]; // ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    array = stabilizedThis.map(el => el[0]);\n    return filter(array, _user => {\n      if (query.filterLocation && _user.address.toLowerCase().indexOf(query.filterLocation.toLowerCase()) === -1) {\n        return false;\n      }\n\n      if (Number(query.filterCoverage) > 0 && _user.coverage < query.filterCoverage) {\n        return false;\n      }\n\n      if (Number(query.filterBalance) > 0 && _user.balance < query.filterBalance) {\n        return false;\n      }\n\n      if (Number(query.filterCredit) > 0 && _user.credit < query.filterCredit) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport default function MailList() {\n  const {\n    themeStretch\n  } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const {\n    userList\n  } = useSelector(state => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('email');\n  const [filterLocation, setFilterLocation] = useState('');\n  const [filterCoverage, setFilterCoverage] = useState('');\n  const [filterBalance, setFilterBalance] = useState('');\n  const [filterCredit, setFilterCredit] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(localStorage.getItem('maillist_rows_per_page') ? Number(localStorage.getItem('maillist_rows_per_page')) : 25);\n  const {\n    settingsList\n  } = useSelector(state => state.setting);\n  const [openMessageDialog, setOpenMessageDialog] = useState(false);\n  const [message, setMessage] = useState('');\n  const [handleMailAddress, setHandleMailAddress] = useState('');\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n\n  const handleCloseSendMsgDlg = () => {\n    setOpenMessageDialog(false);\n  };\n\n  const handleMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleSendMsg = e => {\n    // console.log(message, handleMailAddress, e);\n    setOpenMessageDialog(false);\n    e.preventDefault();\n    emailjs.sendForm('service_wn9lisb', 'template_m65qsyc', e.target, 'user_MxzB0RTW3TNvE5j2yxcMi').then(result => {\n      console.log(result);\n      enqueueSnackbar('Send Message Successfully', {\n        variant: 'success'\n      });\n    }, error => {\n      enqueueSnackbar(error.text, {\n        variant: 'error'\n      });\n      console.log(error.text);\n    });\n  };\n\n  const handleSendMessage = email => {\n    setMessage('');\n    setHandleMailAddress(email);\n    setOpenMessageDialog(true);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('maillist_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByLocation = event => {\n    setFilterLocation(event.target.value);\n  };\n\n  const handleFilterByCoverage = event => {\n    setFilterCoverage(event.target.value);\n  };\n\n  const handleFilterByBalance = event => {\n    setFilterBalance(event.target.value);\n  };\n\n  const handleFilterByCredit = event => {\n    setFilterCredit(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\n    filterLocation,\n    filterCoverage,\n    filterBalance,\n    filterCredit\n  });\n  const isUserNotFound = filteredUsers.length === 0;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Mail: List | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Mail List\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'MailList'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(MailListToolbar, {\n          numSelected: selected.length,\n          filterLocation: filterLocation,\n          onFilterLocation: handleFilterByLocation,\n          filterCoverage: filterCoverage,\n          onFilterCoverage: handleFilterByCoverage,\n          filterBalance: filterBalance,\n          onFilterBalance: handleFilterByBalance,\n          filterCredit: filterCredit,\n          onFilterCredit: handleFilterByCredit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(MailListHead, {\n                order: order,\n                orderBy: orderBy,\n                headLabel: TABLE_HEAD,\n                rowCount: userList.length,\n                numSelected: selected.length,\n                onRequestSort: handleRequestSort,\n                onSelectAllClick: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  const {\n                    _id,\n                    email,\n                    name,\n                    avatarUrl,\n                    role,\n                    credit,\n                    balance,\n                    status,\n                    isVerified,\n                    coverage,\n                    country,\n                    address,\n                    online\n                  } = row;\n                  const isItemSelected = selected.indexOf(email) !== -1;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    tabIndex: -1,\n                    role: \"checkbox\",\n                    selected: isItemSelected,\n                    \"aria-checked\": isItemSelected,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      padding: \"checkbox\",\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: isItemSelected,\n                        onChange: event => handleClick(event, email)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      padding: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        alignItems: \"center\",\n                        spacing: 2,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          noWrap: true,\n                          children: email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      children: address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: coverage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: balance\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: credit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        onClick: () => {\n                          handleSendMessage(email);\n                        },\n                        children: \"Send Message\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 25\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), isUserNotFound && /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 6,\n                    sx: {\n                      py: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n                      searchQuery: `${filterLocation}, ${filterCoverage}, ${filterBalance}, ${filterCredit}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [25, 50, 100],\n          component: \"div\",\n          count: userList.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), openMessageDialog && /*#__PURE__*/_jsxDEV(MailSendMessageDialog, {\n        mailAddress: handleMailAddress,\n        message: message,\n        onMessage: handleMessage,\n        onSend: e => handleSendMsg(e),\n        onClose: handleCloseSendMsgDlg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/pages/dashboard/MailList.js"],"names":["filter","Icon","sentenceCase","useState","useEffect","plusFill","Link","RouterLink","axios","useSnackbar","useTheme","Card","Table","Stack","Avatar","Button","Checkbox","TableRow","TableBody","TableCell","Container","Typography","TableContainer","TablePagination","emailjs","useDispatch","useSelector","getSettingsList","getUserList","PATH_DASHBOARD","useSettings","useAuth","Page","Label","Scrollbar","SearchNotFound","HeaderBreadcrumbs","MailListHead","MailListToolbar","MailSendMessageDialog","TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","getComparator","order","applySortFilter","array","comparator","query","stabilizedThis","map","el","index","sort","_user","filterLocation","address","toLowerCase","indexOf","Number","filterCoverage","coverage","filterBalance","balance","filterCredit","credit","MailList","themeStretch","theme","dispatch","user","logout","userList","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterLocation","setFilterCoverage","setFilterBalance","setFilterCredit","rowsPerPage","setRowsPerPage","localStorage","getItem","settingsList","setting","openMessageDialog","setOpenMessageDialog","message","setMessage","handleMailAddress","setHandleMailAddress","enqueueSnackbar","handleCloseSendMsgDlg","handleMessage","event","target","value","handleSendMsg","e","preventDefault","sendForm","then","result","console","log","variant","error","text","handleSendMessage","email","handleRequestSort","property","isAsc","handleSelectAllClick","checked","newSelecteds","n","name","handleClick","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","setItem","handleFilterByLocation","handleFilterByCoverage","handleFilterByBalance","handleFilterByCredit","emptyRows","Math","max","filteredUsers","isUserNotFound","href","root","minWidth","row","_id","avatarUrl","role","status","isVerified","country","online","isItemSelected","height","py"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B,C,CACA;;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,SARF,EASEC,SATF,EAUEC,SAVF,EAWEC,UAXF,EAYEC,cAZF,EAaEC,eAbF,QAcO,mBAdP;AAeA,OAAOC,OAAP,MAAoB,aAApB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,uCAA9C;AACA,OAAOC,qBAAP,MAAkC,wDAAlC,C,CAEA;;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,MAAtB;AAA8BC,EAAAA,UAAU,EAAE;AAA1C,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,SAAN;AAAiBC,EAAAA,KAAK,EAAE,UAAxB;AAAoCC,EAAAA,UAAU,EAAE;AAAhD,CAFiB,EAGjB;AAAEF,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE,UAAzB;AAAqCC,EAAAA,UAAU,EAAE;AAAjD,CAHiB,EAIjB;AAAEF,EAAAA,EAAE,EAAE,SAAN;AAAiBC,EAAAA,KAAK,EAAE,SAAxB;AAAmCC,EAAAA,UAAU,EAAE;AAA/C,CAJiB,EAKjB;AAAEF,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE,QAAvB;AAAiCC,EAAAA,UAAU,EAAE;AAA7C,CALiB,EAMjB;AAAEF,EAAAA,EAAE,EAAE;AAAN,CANiB,CAAnB,C,CASA;;AAEA,SAASG,oBAAT,CAA8BC,CAA9B,EAAiCC,CAAjC,EAAoCC,OAApC,EAA6C;AAC3C,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BF,OAA9B,EAAuC;AACrC,SAAOE,KAAK,KAAK,MAAV,GACH,CAACJ,CAAD,EAAIC,CAAJ,KAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAD3B,GAEH,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFnC;AAGD;;AAED,SAASG,eAAT,CAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,KAA5C,EAAmD;AACjD,QAAMC,cAAc,GAAGH,KAAK,CAACI,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACb,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAxB;AACA,QAAIG,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GAJD;;AAKA,MAAIO,KAAJ,EAAW;AACTF,IAAAA,KAAK,GAAGG,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAR;AACA,WAAOxD,MAAM,CAACmD,KAAD,EAASQ,KAAD,IAAW;AAC9B,UAAIN,KAAK,CAACO,cAAN,IAAwBD,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4BC,OAA5B,CAAoCV,KAAK,CAACO,cAAN,CAAqBE,WAArB,EAApC,MAA4E,CAAC,CAAzG,EAA4G;AAC1G,eAAO,KAAP;AACD;;AACD,UAAIE,MAAM,CAACX,KAAK,CAACY,cAAP,CAAN,GAA+B,CAA/B,IAAoCN,KAAK,CAACO,QAAN,GAAiBb,KAAK,CAACY,cAA/D,EAA+E;AAC7E,eAAO,KAAP;AACD;;AACD,UAAID,MAAM,CAACX,KAAK,CAACc,aAAP,CAAN,GAA8B,CAA9B,IAAmCR,KAAK,CAACS,OAAN,GAAgBf,KAAK,CAACc,aAA7D,EAA4E;AAC1E,eAAO,KAAP;AACD;;AACD,UAAIH,MAAM,CAACX,KAAK,CAACgB,YAAP,CAAN,GAA6B,CAA7B,IAAkCV,KAAK,CAACW,MAAN,GAAejB,KAAK,CAACgB,YAA3D,EAAyE;AACvE,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAdY,CAAb;AAeD;;AACD,SAAOf,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACD;;AAED,eAAe,SAASe,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAmB1C,WAAW,EAApC;AACA,QAAM2C,KAAK,GAAG/D,QAAQ,EAAtB;AACA,QAAMgE,QAAQ,GAAGjD,WAAW,EAA5B;AACA,QAAM;AAAEkD,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmB7C,OAAO,EAAhC;AACA,QAAM;AAAE8C,IAAAA;AAAF,MAAenD,WAAW,CAAEoD,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkB7E,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC8C,KAAD,EAAQgC,QAAR,IAAoB9E,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC+E,QAAD,EAAWC,WAAX,IAA0BhF,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4C,OAAD,EAAUqC,UAAV,IAAwBjF,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACyD,cAAD,EAAiByB,iBAAjB,IAAsClF,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC8D,cAAD,EAAiBqB,iBAAjB,IAAsCnF,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACgE,aAAD,EAAgBoB,gBAAhB,IAAoCpF,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkE,YAAD,EAAemB,eAAf,IAAkCrF,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACsF,WAAD,EAAcC,cAAd,IAAgCvF,QAAQ,CAC5CwF,YAAY,CAACC,OAAb,CAAqB,wBAArB,IAAiD5B,MAAM,CAAC2B,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAD,CAAvD,GAA0G,EAD9D,CAA9C;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAmBnE,WAAW,CAAEoD,KAAD,IAAWA,KAAK,CAACgB,OAAlB,CAApC;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C7F,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAC8F,OAAD,EAAUC,UAAV,IAAwB/F,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgG,iBAAD,EAAoBC,oBAApB,IAA4CjG,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAEkG,IAAAA;AAAF,MAAsB5F,WAAW,EAAvC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdsE,IAAAA,QAAQ,CAAC9C,WAAW,EAAZ,CAAR;AACA8C,IAAAA,QAAQ,CAAC/C,eAAe,EAAhB,CAAR;AACD,GAHQ,EAGN,CAAC+C,QAAD,CAHM,CAAT;;AAKA,QAAM4B,qBAAqB,GAAG,MAAM;AAClCN,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,QAAMO,aAAa,GAAIC,KAAD,IAAW;AAC/BN,IAAAA,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3B;AACAZ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AAEAY,IAAAA,CAAC,CAACC,cAAF;AAEArF,IAAAA,OAAO,CAACsF,QAAR,CAAiB,iBAAjB,EAAoC,kBAApC,EAAwDF,CAAC,CAACH,MAA1D,EAAkE,4BAAlE,EAAgGM,IAAhG,CACGC,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAX,MAAAA,eAAe,CAAC,2BAAD,EAA8B;AAAEc,QAAAA,OAAO,EAAE;AAAX,OAA9B,CAAf;AACD,KAJH,EAKGC,KAAD,IAAW;AACTf,MAAAA,eAAe,CAACe,KAAK,CAACC,IAAP,EAAa;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAb,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,IAAlB;AACD,KARH;AAUD,GAhBD;;AAkBA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCrB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,oBAAoB,CAACmB,KAAD,CAApB;AACAvB,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAJD;;AAMA,QAAMwB,iBAAiB,GAAG,CAAChB,KAAD,EAAQiB,QAAR,KAAqB;AAC7C,UAAMC,KAAK,GAAG3E,OAAO,KAAK0E,QAAZ,IAAwBxE,KAAK,KAAK,KAAhD;AACAgC,IAAAA,QAAQ,CAACyC,KAAK,GAAG,MAAH,GAAY,KAAlB,CAAR;AACAtC,IAAAA,UAAU,CAACqC,QAAD,CAAV;AACD,GAJD;;AAMA,QAAME,oBAAoB,GAAInB,KAAD,IAAW;AACtC,QAAIA,KAAK,CAACC,MAAN,CAAamB,OAAjB,EAA0B;AACxB,YAAMC,YAAY,GAAGhD,QAAQ,CAACtB,GAAT,CAAcuE,CAAD,IAAOA,CAAC,CAACC,IAAtB,CAArB;AACA5C,MAAAA,WAAW,CAAC0C,YAAD,CAAX;AACA;AACD;;AACD1C,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAM6C,WAAW,GAAG,CAACxB,KAAD,EAAQuB,IAAR,KAAiB;AACnC,UAAME,aAAa,GAAG/C,QAAQ,CAACnB,OAAT,CAAiBgE,IAAjB,CAAtB;AACA,QAAIG,WAAW,GAAG,EAAlB;;AACA,QAAID,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBjD,QAAnB,EAA6B6C,IAA7B,CAAd;AACD,KAFD,MAEO,IAAIE,aAAa,KAAK,CAAtB,EAAyB;AAC9BC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBjD,QAAQ,CAACkD,KAAT,CAAe,CAAf,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIH,aAAa,KAAK/C,QAAQ,CAACmD,MAAT,GAAkB,CAAxC,EAA2C;AAChDH,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBjD,QAAQ,CAACkD,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACD,KAFM,MAEA,IAAIH,aAAa,GAAG,CAApB,EAAuB;AAC5BC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBjD,QAAQ,CAACkD,KAAT,CAAe,CAAf,EAAkBH,aAAlB,CAAnB,EAAqD/C,QAAQ,CAACkD,KAAT,CAAeH,aAAa,GAAG,CAA/B,CAArD,CAAd;AACD;;AACD9C,IAAAA,WAAW,CAAC+C,WAAD,CAAX;AACD,GAbD;;AAeA,QAAMI,gBAAgB,GAAG,CAAC9B,KAAD,EAAQ+B,OAAR,KAAoB;AAC3CvD,IAAAA,OAAO,CAACuD,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIhC,KAAD,IAAW;AACzCd,IAAAA,cAAc,CAAC+C,QAAQ,CAACjC,KAAK,CAACC,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAf,IAAAA,YAAY,CAAC+C,OAAb,CAAqB,wBAArB,EAA+CD,QAAQ,CAACjC,KAAK,CAACC,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAvD;AACA1B,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,QAAM2D,sBAAsB,GAAInC,KAAD,IAAW;AACxCnB,IAAAA,iBAAiB,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMkC,sBAAsB,GAAIpC,KAAD,IAAW;AACxClB,IAAAA,iBAAiB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMmC,qBAAqB,GAAIrC,KAAD,IAAW;AACvCjB,IAAAA,gBAAgB,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD;;AAIA,QAAMoC,oBAAoB,GAAItC,KAAD,IAAW;AACtChB,IAAAA,eAAe,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMqC,SAAS,GAAGhE,IAAI,GAAG,CAAP,GAAWiE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,IAAIlE,IAAL,IAAaU,WAAb,GAA2BZ,QAAQ,CAACwD,MAAhD,CAAX,GAAqE,CAAvF;AAEA,QAAMa,aAAa,GAAGhG,eAAe,CAAC2B,QAAD,EAAW7B,aAAa,CAACC,KAAD,EAAQF,OAAR,CAAxB,EAA0C;AAC7Ea,IAAAA,cAD6E;AAE7EK,IAAAA,cAF6E;AAG7EE,IAAAA,aAH6E;AAI7EE,IAAAA;AAJ6E,GAA1C,CAArC;AAOA,QAAM8E,cAAc,GAAGD,aAAa,CAACb,MAAd,KAAyB,CAAhD;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,qBAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE7D,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAE,CAAC;AAAEuD,UAAAA,IAAI,EAAE,WAAR;AAAqBqB,UAAAA,IAAI,EAAEvH,cAAc,CAACwH;AAA1C,SAAD,EAAmD;AAAEtB,UAAAA,IAAI,EAAE;AAAR,SAAnD;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAA,gCACE,QAAC,eAAD;AACE,UAAA,WAAW,EAAE7C,QAAQ,CAACmD,MADxB;AAEE,UAAA,cAAc,EAAEzE,cAFlB;AAGE,UAAA,gBAAgB,EAAE+E,sBAHpB;AAIE,UAAA,cAAc,EAAE1E,cAJlB;AAKE,UAAA,gBAAgB,EAAE2E,sBALpB;AAME,UAAA,aAAa,EAAEzE,aANjB;AAOE,UAAA,eAAe,EAAE0E,qBAPnB;AAQE,UAAA,YAAY,EAAExE,YARhB;AASE,UAAA,cAAc,EAAEyE;AATlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,SAAD;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAE;AAAEQ,cAAAA,QAAQ,EAAE;AAAZ,aAApB;AAAA,mCACE,QAAC,KAAD;AAAA,sCACE,QAAC,YAAD;AACE,gBAAA,KAAK,EAAErG,KADT;AAEE,gBAAA,OAAO,EAAEF,OAFX;AAGE,gBAAA,SAAS,EAAEP,UAHb;AAIE,gBAAA,QAAQ,EAAEqC,QAAQ,CAACwD,MAJrB;AAKE,gBAAA,WAAW,EAAEnD,QAAQ,CAACmD,MALxB;AAME,gBAAA,aAAa,EAAEb,iBANjB;AAOE,gBAAA,gBAAgB,EAAEG;AAPpB;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,SAAD;AAAA,2BACGuB,aAAa,CAACd,KAAd,CAAoBrD,IAAI,GAAGU,WAA3B,EAAwCV,IAAI,GAAGU,WAAP,GAAqBA,WAA7D,EAA0ElC,GAA1E,CAA+EgG,GAAD,IAAS;AACtF,wBAAM;AACJC,oBAAAA,GADI;AAEJjC,oBAAAA,KAFI;AAGJQ,oBAAAA,IAHI;AAIJ0B,oBAAAA,SAJI;AAKJC,oBAAAA,IALI;AAMJpF,oBAAAA,MANI;AAOJF,oBAAAA,OAPI;AAQJuF,oBAAAA,MARI;AASJC,oBAAAA,UATI;AAUJ1F,oBAAAA,QAVI;AAWJ2F,oBAAAA,OAXI;AAYJhG,oBAAAA,OAZI;AAaJiG,oBAAAA;AAbI,sBAcFP,GAdJ;AAeA,wBAAMQ,cAAc,GAAG7E,QAAQ,CAACnB,OAAT,CAAiBwD,KAAjB,MAA4B,CAAC,CAApD;AAEA,sCACE,QAAC,QAAD;AACE,oBAAA,KAAK,MADP;AAGE,oBAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,oBAAA,IAAI,EAAC,UAJP;AAKE,oBAAA,QAAQ,EAAEwC,cALZ;AAME,oCAAcA,cANhB;AAAA,4CAQE,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAC,UAAnB;AAAA,6CACE,QAAC,QAAD;AAAU,wBAAA,OAAO,EAAEA,cAAnB;AAAmC,wBAAA,QAAQ,EAAGvD,KAAD,IAAWwB,WAAW,CAACxB,KAAD,EAAQe,KAAR;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BARF,eAWE,QAAC,SAAD;AAAW,sBAAA,SAAS,EAAC,IAArB;AAA0B,sBAAA,KAAK,EAAC,KAAhC;AAAsC,sBAAA,OAAO,EAAC,MAA9C;AAAA,6CACE,QAAC,KAAD;AAAO,wBAAA,SAAS,EAAC,KAAjB;AAAuB,wBAAA,UAAU,EAAC,QAAlC;AAA2C,wBAAA,OAAO,EAAE,CAApD;AAAA,+CACE,QAAC,UAAD;AAAY,0BAAA,OAAO,EAAC,WAApB;AAAgC,0BAAA,MAAM,MAAtC;AAAA,oCACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAXF,eAkBE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,MAAjB;AAAA,gCACG1D;AADH;AAAA;AAAA;AAAA;AAAA,4BAlBF,eAqBE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,OAAjB;AAAA,gCACGK;AADH;AAAA;AAAA;AAAA;AAAA,4BArBF,eAwBE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,OAAjB;AAAA,gCACGE;AADH;AAAA;AAAA;AAAA;AAAA,4BAxBF,eA2BE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,OAAjB;AAAA,gCACGE;AADH;AAAA;AAAA;AAAA;AAAA,4BA3BF,eA8BE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,OAAjB;AAAA,6CACE,QAAC,MAAD;AACE,wBAAA,OAAO,EAAC,WADV;AAEE,wBAAA,OAAO,EAAE,MAAM;AACbgD,0BAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACD,yBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BA9BF;AAAA,qBAEOiC,GAFP;AAAA;AAAA;AAAA;AAAA,0BADF;AA2CD,iBA7DA,CADH,EA+DGT,SAAS,GAAG,CAAZ,iBACC,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAE;AAAEiB,oBAAAA,MAAM,EAAE,KAAKjB;AAAf,mBAAjB;AAAA,yCACE,QAAC,SAAD;AAAW,oBAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,EA+EGI,cAAc,iBACb,QAAC,SAAD;AAAA,uCACE,QAAC,QAAD;AAAA,yCACE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,QAAjB;AAA0B,oBAAA,OAAO,EAAE,CAAnC;AAAsC,oBAAA,EAAE,EAAE;AAAEc,sBAAAA,EAAE,EAAE;AAAN,qBAA1C;AAAA,2CACE,QAAC,cAAD;AACE,sBAAA,WAAW,EAAG,GAAErG,cAAe,KAAIK,cAAe,KAAIE,aAAc,KAAIE,YAAa;AADvF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF,eA6GE,QAAC,eAAD;AACE,UAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAEQ,QAAQ,CAACwD,MAHlB;AAIE,UAAA,WAAW,EAAE5C,WAJf;AAKE,UAAA,IAAI,EAAEV,IALR;AAME,UAAA,YAAY,EAAEuD,gBANhB;AAOE,UAAA,mBAAmB,EAAEE;AAPvB;AAAA;AAAA;AAAA;AAAA,gBA7GF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EA6HGzC,iBAAiB,iBAChB,QAAC,qBAAD;AACE,QAAA,WAAW,EAAEI,iBADf;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,SAAS,EAAEM,aAHb;AAIE,QAAA,MAAM,EAAGK,CAAD,IAAOD,aAAa,CAACC,CAAD,CAJ9B;AAKE,QAAA,OAAO,EAAEN;AALX;AAAA;AAAA;AAAA;AAAA,cA9HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2ID","sourcesContent":["import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack5';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@material-ui/core';\nimport emailjs from 'emailjs-com';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSettingsList } from '../../redux/slices/settings';\nimport { getUserList } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { MailListHead, MailListToolbar } from '../../components/_dashboard/mail/list';\nimport MailSendMessageDialog from '../../components/_dashboard/mail/MailSendMessageDialog';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'email', label: 'Mail', alignRight: false },\n  { id: 'address', label: 'Location', alignRight: false },\n  { id: 'coverage', label: 'Coverage', alignRight: false },\n  { id: 'balance', label: 'Balance', alignRight: false },\n  { id: 'credit', label: 'Credit', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    array = stabilizedThis.map((el) => el[0]);\n    return filter(array, (_user) => {\n      if (query.filterLocation && _user.address.toLowerCase().indexOf(query.filterLocation.toLowerCase()) === -1) {\n        return false;\n      }\n      if (Number(query.filterCoverage) > 0 && _user.coverage < query.filterCoverage) {\n        return false;\n      }\n      if (Number(query.filterBalance) > 0 && _user.balance < query.filterBalance) {\n        return false;\n      }\n      if (Number(query.filterCredit) > 0 && _user.credit < query.filterCredit) {\n        return false;\n      }\n      return true;\n    });\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function MailList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { user, logout } = useAuth();\n  const { userList } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('email');\n  const [filterLocation, setFilterLocation] = useState('');\n  const [filterCoverage, setFilterCoverage] = useState('');\n  const [filterBalance, setFilterBalance] = useState('');\n  const [filterCredit, setFilterCredit] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(\n    localStorage.getItem('maillist_rows_per_page') ? Number(localStorage.getItem('maillist_rows_per_page')) : 25\n  );\n  const { settingsList } = useSelector((state) => state.setting);\n  const [openMessageDialog, setOpenMessageDialog] = useState(false);\n  const [message, setMessage] = useState('');\n  const [handleMailAddress, setHandleMailAddress] = useState('');\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n\n  const handleCloseSendMsgDlg = () => {\n    setOpenMessageDialog(false);\n  };\n\n  const handleMessage = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSendMsg = (e) => {\n    // console.log(message, handleMailAddress, e);\n    setOpenMessageDialog(false);\n\n    e.preventDefault();\n\n    emailjs.sendForm('service_wn9lisb', 'template_m65qsyc', e.target, 'user_MxzB0RTW3TNvE5j2yxcMi').then(\n      (result) => {\n        console.log(result);\n        enqueueSnackbar('Send Message Successfully', { variant: 'success' });\n      },\n      (error) => {\n        enqueueSnackbar(error.text, { variant: 'error' });\n        console.log(error.text);\n      }\n    );\n  };\n\n  const handleSendMessage = (email) => {\n    setMessage('');\n    setHandleMailAddress(email);\n    setOpenMessageDialog(true);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('maillist_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByLocation = (event) => {\n    setFilterLocation(event.target.value);\n  };\n\n  const handleFilterByCoverage = (event) => {\n    setFilterCoverage(event.target.value);\n  };\n\n  const handleFilterByBalance = (event) => {\n    setFilterBalance(event.target.value);\n  };\n\n  const handleFilterByCredit = (event) => {\n    setFilterCredit(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\n    filterLocation,\n    filterCoverage,\n    filterBalance,\n    filterCredit\n  });\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"Mail: List | Locals\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Mail List\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'MailList' }]}\n        />\n\n        <Card>\n          <MailListToolbar\n            numSelected={selected.length}\n            filterLocation={filterLocation}\n            onFilterLocation={handleFilterByLocation}\n            filterCoverage={filterCoverage}\n            onFilterCoverage={handleFilterByCoverage}\n            filterBalance={filterBalance}\n            onFilterBalance={handleFilterByBalance}\n            filterCredit={filterCredit}\n            onFilterCredit={handleFilterByCredit}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <MailListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={userList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const {\n                      _id,\n                      email,\n                      name,\n                      avatarUrl,\n                      role,\n                      credit,\n                      balance,\n                      status,\n                      isVerified,\n                      coverage,\n                      country,\n                      address,\n                      online\n                    } = row;\n                    const isItemSelected = selected.indexOf(email) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={_id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, email)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {email}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {address}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {coverage}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {balance}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {credit}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => {\n                              handleSendMessage(email);\n                            }}\n                          >\n                            Send Message\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound\n                          searchQuery={`${filterLocation}, ${filterCoverage}, ${filterBalance}, ${filterCredit}`}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[25, 50, 100]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n        {openMessageDialog && (\n          <MailSendMessageDialog\n            mailAddress={handleMailAddress}\n            message={message}\n            onMessage={handleMessage}\n            onSend={(e) => handleSendMsg(e)}\n            onClose={handleCloseSendMsgDlg}\n          />\n        )}\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}