{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\pages\\\\dashboard\\\\MailList.js\";\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport axios from 'axios'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Card, Table, Stack, Avatar, Button, Checkbox, TableRow, TableBody, TableCell, Container, Typography, TableContainer, TablePagination } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSettingsList } from '../../redux/slices/settings';\nimport { getUserList } from '../../redux/slices/user'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth'; // components\n\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { MailListHead, MailListToolbar } from '../../components/_dashboard/mail/list'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_HEAD = [{\n  id: 'email',\n  label: 'Mail',\n  alignRight: false\n}, {\n  id: ''\n}]; // ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    return filter(array, _user => {\n      if (query.filterLocation && _user.location.toLowerCase().indexOf(query.filterLocation.toLowerCase()) === -1) {\n        return false;\n      }\n\n      if (Number(query.filterCoverage) > 0 && _user.coverage < query.filterCoverage) {\n        return false;\n      }\n\n      if (Number(query.filterBalance) > 0 && _user.balance < query.filterBalance) {\n        return false;\n      }\n\n      if (Number(query.filterCredit) > 0 && _user.credit < query.filterCredit) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport default function MailList() {\n  const {\n    themeStretch\n  } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const {\n    userList\n  } = useSelector(state => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('email');\n  const [filterLocation, setFilterLocation] = useState('');\n  const [filterCoverage, setFilterCoverage] = useState('');\n  const [filterBalance, setFilterBalance] = useState('');\n  const [filterCredit, setFilterCredit] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(localStorage.getItem('maillist_rows_per_page') ? Number(localStorage.getItem('maillist_rows_per_page')) : 25);\n  const {\n    settingsList\n  } = useSelector(state => state.setting);\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('maillist_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByLocation = event => {\n    setFilterLocation(event.target.value);\n  };\n\n  const handleFilterByCoverage = event => {\n    setFilterCoverage(event.target.value);\n  };\n\n  const handleFilterByBalance = event => {\n    setFilterBalance(event.target.value);\n  };\n\n  const handleFilterByCredit = event => {\n    setFilterCredit(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\n    filterLocation,\n    filterCoverage,\n    filterBalance,\n    filterCredit\n  });\n  const isUserNotFound = filteredUsers.length === 0;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Mail: List | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Mail List\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'MailList'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(MailListToolbar, {\n          filterLocation: filterLocation,\n          onfilterLocation: handleFilterByLocation,\n          filterCoverage: filterCoverage,\n          onfilterCoverage: handleFilterByCoverage,\n          filterBalance: filterBalance,\n          onfilterBalance: handleFilterByBalance,\n          filterCredit: filterCredit,\n          onfilterCredit: handleFilterByCredit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(MailListHead, {\n                order: order,\n                orderBy: orderBy,\n                headLabel: TABLE_HEAD,\n                rowCount: userList.length,\n                numSelected: selected.length,\n                onRequestSort: handleRequestSort,\n                onSelectAllClick: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  const {\n                    _id,\n                    email,\n                    name,\n                    avatarUrl,\n                    role,\n                    credit,\n                    balance,\n                    status,\n                    isVerified,\n                    coverage,\n                    country,\n                    online\n                  } = row;\n                  const isItemSelected = selected.indexOf(email) !== -1;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    tabIndex: -1,\n                    role: \"checkbox\",\n                    selected: isItemSelected,\n                    \"aria-checked\": isItemSelected,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      padding: \"checkbox\",\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: isItemSelected,\n                        onChange: event => handleClick(event, email)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      padding: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        alignItems: \"center\",\n                        spacing: 2,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          noWrap: true,\n                          children: email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), isUserNotFound && /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 6,\n                    sx: {\n                      py: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n                      searchQuery: filterLocation\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [25, 50, 100],\n          component: \"div\",\n          count: userList.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/pages/dashboard/MailList.js"],"names":["filter","Icon","sentenceCase","useState","useEffect","plusFill","Link","RouterLink","axios","useTheme","Card","Table","Stack","Avatar","Button","Checkbox","TableRow","TableBody","TableCell","Container","Typography","TableContainer","TablePagination","useDispatch","useSelector","getSettingsList","getUserList","PATH_DASHBOARD","useSettings","useAuth","Page","Label","Scrollbar","SearchNotFound","HeaderBreadcrumbs","MailListHead","MailListToolbar","TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","getComparator","order","applySortFilter","array","comparator","query","stabilizedThis","map","el","index","sort","_user","filterLocation","location","toLowerCase","indexOf","Number","filterCoverage","coverage","filterBalance","balance","filterCredit","credit","MailList","themeStretch","theme","dispatch","user","logout","userList","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterLocation","setFilterCoverage","setFilterBalance","setFilterCredit","rowsPerPage","setRowsPerPage","localStorage","getItem","settingsList","setting","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","setItem","handleFilterByLocation","handleFilterByCoverage","handleFilterByBalance","handleFilterByCredit","emptyRows","Math","max","filteredUsers","isUserNotFound","href","root","minWidth","row","_id","email","avatarUrl","role","status","isVerified","country","online","isItemSelected","height","py"],"mappings":"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","sourcesContent":["import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport axios from 'axios';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSettingsList } from '../../redux/slices/settings';\nimport { getUserList } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { MailListHead, MailListToolbar } from '../../components/_dashboard/mail/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [{ id: 'email', label: 'Mail', alignRight: false }, { id: '' }];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => {\n      if (query.filterLocation && _user.location.toLowerCase().indexOf(query.filterLocation.toLowerCase()) === -1) {\n        return false;\n      }\n      if (Number(query.filterCoverage) > 0 && _user.coverage < query.filterCoverage) {\n        return false;\n      }\n      if (Number(query.filterBalance) > 0 && _user.balance < query.filterBalance) {\n        return false;\n      }\n      if (Number(query.filterCredit) > 0 && _user.credit < query.filterCredit) {\n        return false;\n      }\n      return true;\n    });\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function MailList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { user, logout } = useAuth();\n  const { userList } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('email');\n  const [filterLocation, setFilterLocation] = useState('');\n  const [filterCoverage, setFilterCoverage] = useState('');\n  const [filterBalance, setFilterBalance] = useState('');\n  const [filterCredit, setFilterCredit] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(\n    localStorage.getItem('maillist_rows_per_page') ? Number(localStorage.getItem('maillist_rows_per_page')) : 25\n  );\n  const { settingsList } = useSelector((state) => state.setting);\n\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('maillist_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByLocation = (event) => {\n    setFilterLocation(event.target.value);\n  };\n\n  const handleFilterByCoverage = (event) => {\n    setFilterCoverage(event.target.value);\n  };\n\n  const handleFilterByBalance = (event) => {\n    setFilterBalance(event.target.value);\n  };\n\n  const handleFilterByCredit = (event) => {\n    setFilterCredit(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\n    filterLocation,\n    filterCoverage,\n    filterBalance,\n    filterCredit\n  });\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"Mail: List | Locals\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Mail List\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'MailList' }]}\n        />\n\n        <Card>\n          <MailListToolbar\n            filterLocation={filterLocation}\n            onfilterLocation={handleFilterByLocation}\n            filterCoverage={filterCoverage}\n            onfilterCoverage={handleFilterByCoverage}\n            filterBalance={filterBalance}\n            onfilterBalance={handleFilterByBalance}\n            filterCredit={filterCredit}\n            onfilterCredit={handleFilterByCredit}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <MailListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={userList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const {\n                      _id,\n                      email,\n                      name,\n                      avatarUrl,\n                      role,\n                      credit,\n                      balance,\n                      status,\n                      isVerified,\n                      coverage,\n                      country,\n                      online\n                    } = row;\n                    const isItemSelected = selected.indexOf(email) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={_id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, email)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {email}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterLocation} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[25, 50, 100]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}