{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\pages\\\\dashboard\\\\UserAccount.js\";\nimport { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport roundVpnKey from '@iconify/icons-ic/round-vpn-key';\nimport roundReceipt from '@iconify/icons-ic/round-receipt';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box'; // material\n\nimport { Container, Tab, Box, Tabs, Stack } from '@material-ui/core'; // redux\n\nimport { useDispatch } from '../../redux/store';\nimport { getCards, getProfile, getInvoices, getAddressBook, getNotifications } from '../../redux/slices/user'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { AccountGeneral, AccountBilling, AccountSocialLinks, AccountNotifications, AccountChangePassword } from '../../components/_dashboard/user/account'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserAccount() {\n  const {\n    themeStretch\n  } = useSettings();\n  const [currentTab, setCurrentTab] = useState('change_password');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCards());\n    dispatch(getAddressBook());\n    dispatch(getInvoices());\n    dispatch(getNotifications());\n    dispatch(getProfile());\n  }, [dispatch]);\n  const ACCOUNT_TABS = [// {\n  //   value: 'general',\n  //   icon: <Icon icon={roundAccountBox} width={20} height={20} />,\n  //   component: <AccountGeneral />\n  // },\n  {\n    value: 'change_password',\n    icon: /*#__PURE__*/_jsxDEV(Icon, {\n      icon: roundVpnKey,\n      width: 20,\n      height: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this),\n    component: /*#__PURE__*/_jsxDEV(AccountChangePassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const handleChangeTab = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User: Account Settings | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Account\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'Account Settings'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: currentTab,\n          scrollButtons: \"auto\",\n          variant: \"scrollable\",\n          allowScrollButtonsMobile: true,\n          onChange: handleChangeTab,\n          children: ACCOUNT_TABS.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n            disableRipple: true,\n            label: capitalCase(tab.value),\n            icon: tab.icon,\n            value: tab.value\n          }, tab.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), ACCOUNT_TABS.map(tab => {\n          const isMatched = tab.value === currentTab;\n          return isMatched && /*#__PURE__*/_jsxDEV(Box, {\n            children: tab.component\n          }, tab.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/pages/dashboard/UserAccount.js"],"names":["Icon","capitalCase","useState","useEffect","bellFill","shareFill","roundVpnKey","roundReceipt","roundAccountBox","Container","Tab","Box","Tabs","Stack","useDispatch","getCards","getProfile","getInvoices","getAddressBook","getNotifications","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","AccountGeneral","AccountBilling","AccountSocialLinks","AccountNotifications","AccountChangePassword","UserAccount","themeStretch","currentTab","setCurrentTab","dispatch","ACCOUNT_TABS","value","icon","component","handleChangeTab","event","newValue","name","href","root","map","tab","isMatched"],"mappings":";AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,eAAP,MAA4B,qCAA5B,C,CACA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,KAApC,QAAiD,mBAAjD,C,CACA;;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4DC,gBAA5D,QAAoF,yBAApF,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,qBALF,QAMO,0CANP,C,CAQA;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAmBT,WAAW,EAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,iBAAD,CAA5C;AACA,QAAM+B,QAAQ,GAAGnB,WAAW,EAA5B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAAClB,QAAQ,EAAT,CAAR;AACAkB,IAAAA,QAAQ,CAACf,cAAc,EAAf,CAAR;AACAe,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAgB,IAAAA,QAAQ,CAACd,gBAAgB,EAAjB,CAAR;AACAc,IAAAA,QAAQ,CAACjB,UAAU,EAAX,CAAR;AACD,GANQ,EAMN,CAACiB,QAAD,CANM,CAAT;AAQA,QAAMC,YAAY,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,IAAI,eAAE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE9B,WAAZ;AAAyB,MAAA,KAAK,EAAE,EAAhC;AAAoC,MAAA,MAAM,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFR;AAGE+B,IAAAA,SAAS,eAAE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAHb,GANmB,CAArB;;AAaA,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CR,IAAAA,aAAa,CAACQ,QAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEV,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,KAAK,EAAE,CAAC;AAAEW,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEtB,cAAc,CAACuB;AAA1C,SAAD,EAAmD;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAnD;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAEV,UADT;AAEE,UAAA,aAAa,EAAC,MAFhB;AAGE,UAAA,OAAO,EAAC,YAHV;AAIE,UAAA,wBAAwB,MAJ1B;AAKE,UAAA,QAAQ,EAAEO,eALZ;AAAA,oBAOGJ,YAAY,CAACU,GAAb,CAAkBC,GAAD,iBAChB,QAAC,GAAD;AAAK,YAAA,aAAa,MAAlB;AAAmC,YAAA,KAAK,EAAE5C,WAAW,CAAC4C,GAAG,CAACV,KAAL,CAArD;AAAkE,YAAA,IAAI,EAAEU,GAAG,CAACT,IAA5E;AAAkF,YAAA,KAAK,EAAES,GAAG,CAACV;AAA7F,aAAwBU,GAAG,CAACV,KAA5B;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGD,YAAY,CAACU,GAAb,CAAkBC,GAAD,IAAS;AACzB,gBAAMC,SAAS,GAAGD,GAAG,CAACV,KAAJ,KAAcJ,UAAhC;AACA,iBAAOe,SAAS,iBAAI,QAAC,GAAD;AAAA,sBAAsBD,GAAG,CAACR;AAA1B,aAAUQ,GAAG,CAACV,KAAd;AAAA;AAAA;AAAA;AAAA,kBAApB;AACD,SAHA,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD","sourcesContent":["import { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport roundVpnKey from '@iconify/icons-ic/round-vpn-key';\nimport roundReceipt from '@iconify/icons-ic/round-receipt';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\n// material\nimport { Container, Tab, Box, Tabs, Stack } from '@material-ui/core';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getCards, getProfile, getInvoices, getAddressBook, getNotifications } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport {\n  AccountGeneral,\n  AccountBilling,\n  AccountSocialLinks,\n  AccountNotifications,\n  AccountChangePassword\n} from '../../components/_dashboard/user/account';\n\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {\n  const { themeStretch } = useSettings();\n  const [currentTab, setCurrentTab] = useState('change_password');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCards());\n    dispatch(getAddressBook());\n    dispatch(getInvoices());\n    dispatch(getNotifications());\n    dispatch(getProfile());\n  }, [dispatch]);\n\n  const ACCOUNT_TABS = [\n    // {\n    //   value: 'general',\n    //   icon: <Icon icon={roundAccountBox} width={20} height={20} />,\n    //   component: <AccountGeneral />\n    // },\n    {\n      value: 'change_password',\n      icon: <Icon icon={roundVpnKey} width={20} height={20} />,\n      component: <AccountChangePassword />\n    }\n  ];\n\n  const handleChangeTab = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Page title=\"User: Account Settings | Locals\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Account\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Account Settings' }]}\n        />\n\n        <Stack spacing={5}>\n          <Tabs\n            value={currentTab}\n            scrollButtons=\"auto\"\n            variant=\"scrollable\"\n            allowScrollButtonsMobile\n            onChange={handleChangeTab}\n          >\n            {ACCOUNT_TABS.map((tab) => (\n              <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\n            ))}\n          </Tabs>\n\n          {ACCOUNT_TABS.map((tab) => {\n            const isMatched = tab.value === currentTab;\n            return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n          })}\n        </Stack>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}