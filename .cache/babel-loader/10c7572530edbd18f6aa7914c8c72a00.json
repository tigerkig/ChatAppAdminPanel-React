{"ast":null,"code":"import { useDispatch as useReduxDispatch, useSelector as useReduxSelector } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist'; //\n\nimport { rootPersistConfig, rootReducer } from './rootReducer'; // ----------------------------------------------------------------------\n\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\nconst persistor = persistStore(store);\nconst useSelector = useReduxSelector;\n\nconst useDispatch = () => useReduxDispatch();\n\nexport { store, persistor, useSelector, useDispatch };","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/redux/store.js"],"names":["useDispatch","useReduxDispatch","useSelector","useReduxSelector","configureStore","getDefaultMiddleware","persistStore","persistReducer","rootPersistConfig","rootReducer","store","reducer","middleware","serializableCheck","immutableCheck","persistor"],"mappings":"AAAA,SAASA,WAAW,IAAIC,gBAAxB,EAA0CC,WAAW,IAAIC,gBAAzD,QAAiF,aAAjF;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,eAA/C,C,CAEA;;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;AAC3BO,EAAAA,OAAO,EAAEJ,cAAc,CAACC,iBAAD,EAAoBC,WAApB,CADI;AAE3BG,EAAAA,UAAU,EAAEP,oBAAoB,CAAC;AAC/BQ,IAAAA,iBAAiB,EAAE,KADY;AAE/BC,IAAAA,cAAc,EAAE;AAFe,GAAD;AAFL,CAAD,CAA5B;AAQA,MAAMC,SAAS,GAAGT,YAAY,CAACI,KAAD,CAA9B;AAEA,MAAMR,WAAW,GAAGC,gBAApB;;AAEA,MAAMH,WAAW,GAAG,MAAMC,gBAAgB,EAA1C;;AAEA,SAASS,KAAT,EAAgBK,SAAhB,EAA2Bb,WAA3B,EAAwCF,WAAxC","sourcesContent":["import { useDispatch as useReduxDispatch, useSelector as useReduxSelector } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\n//\nimport { rootPersistConfig, rootReducer } from './rootReducer';\n\n// ----------------------------------------------------------------------\n\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\n\nconst persistor = persistStore(store);\n\nconst useSelector = useReduxSelector;\n\nconst useDispatch = () => useReduxDispatch();\n\nexport { store, persistor, useSelector, useDispatch };\n"]},"metadata":{},"sourceType":"module"}