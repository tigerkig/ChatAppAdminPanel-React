{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\components\\\\_dashboard\\\\announcement\\\\PostForm.js\";\nimport { useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Typography, TextareaAutosize, TextField, IconButton, Radio, RadioGroup, FormControlLabel, styled } from '@material-ui/core';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate'; // utils\n\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnnouncementPostForm() {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const fileInputRef = useRef(null);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [uploadImgs, setUploadImgs] = useState(null);\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleImageUpload = e => {\n    // console.log(e.target.files);\n    const fileObj = [];\n    const fileArray = [];\n    const formData = new FormData();\n    fileObj.push(e.target.files);\n\n    for (let i = 0; i < fileObj[0].length; i += 1) {\n      const file = fileObj[0][i];\n      formData.append(`img[${i}]`, file, file.name);\n      fileArray.push({\n        index: i,\n        name: file.name,\n        url: URL.createObjectURL(file)\n      });\n    } // console.log(fileArray);\n\n\n    setImageFiles(fileArray);\n    setUploadImgs(formData);\n  };\n\n  const MessageImgStyle = styled('img')(({\n    theme\n  }) => ({\n    height: 80,\n    minWidth: 80,\n    width: 'auto',\n    cursor: 'pointer',\n    objectFit: 'cover',\n    borderRadius: theme.shape.borderRadius\n  }));\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required'),\n    position: Yup.string().required('This field is required'),\n    coverage: Yup.string().required('This field is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      message: '',\n      posted_at: 'public',\n      publisher: 'admin',\n      position: '',\n      coverage: 150\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        let imgs = [];\n\n        if (uploadImgs) {\n          const res = await axios.post('/roomMessages/upload_multi_imgs', uploadImgs);\n          imgs = res.data.data;\n          setImageFiles([]);\n          setUploadImgs(null);\n        }\n\n        values.imgs = imgs;\n        await axios.post('/roomMessages/announcement', values);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successful', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik; // console.log(values);\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextareaAutosize, { ...getFieldProps('message'),\n                  maxRows: 20,\n                  minRows: 6,\n                  \"aria-label\": \"Post Public Announcement\",\n                  placeholder: \"text input(max. 2000 words)\",\n                  style: {\n                    width: '100%',\n                    padding: '10px'\n                  } // error={Boolean(touched.message && errors.message)}\n                  // helperText={touched.message && errors.message}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 3\n                  },\n                  children: \"Add pictures (max. 9) from hard-disk.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: handleAttach,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: roundAddPhotoAlternate,\n                    width: 24,\n                    height: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), imageFiles.length > 0 && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                sx: {\n                  mt: 1,\n                  mb: 1\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: imageFiles.map(img => /*#__PURE__*/_jsxDEV(MessageImgStyle, {\n                  alt: \"attachment\",\n                  src: `${img.url}`\n                }, `${img.index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 10,\n                  sm: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Post at\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('posted_at'),\n                  \"aria-label\": \"Posted at\" // error={Boolean(touched.posted_at && errors.posted_at)}\n                  // helperText={touched.posted_at && errors.posted_at}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"public\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 63\n                    }, this),\n                    label: \"Public chat room\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"top\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 60\n                    }, this),\n                    label: \"Top column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 8,\n                  sm: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Publisher\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('publisher'),\n                  \"aria-label\": \"Publisher\" // error={Boolean(touched.publisher && errors.publisher)}\n                  // helperText={touched.publisher && errors.publisher}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"admin\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 62\n                    }, this),\n                    label: \"App administrator (default)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"user\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 61\n                    }, this),\n                    label: \"User email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), values.publisher === 'user' && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 18,\n                  sm: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: {\n                    xs: 'column',\n                    sm: 'row'\n                  },\n                  spacing: {\n                    xs: 3,\n                    sm: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('poster_email'),\n                    variant: \"standard\",\n                    style: {\n                      width: 200\n                    } // error={Boolean(touched.poster_email && errors.poster_email)}\n                    // helperText={touched.poster_email && errors.poster_email}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"div\",\n                    style: {\n                      lineHeight: 2\n                    },\n                    children: \"(announcement post by user's name/avatar)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Range Setting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Center (longitude, latitude)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('position'),\n                      variant: \"standard\",\n                      style: {\n                        width: 300\n                      },\n                      error: Boolean(touched.position && errors.position),\n                      helperText: touched.position && errors.position\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: {\n                      xs: 'column',\n                      sm: 'row'\n                    },\n                    spacing: {\n                      xs: 3,\n                      sm: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"Cover people\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('coverage'),\n                      variant: \"standard\",\n                      style: {\n                        width: 200\n                      },\n                      error: Boolean(touched.coverage && errors.coverage),\n                      helperText: touched.coverage && errors.coverage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"div\",\n                      style: {\n                        lineHeight: 2\n                      },\n                      children: \"person\\uFF08 between 0 ~ 1 million )\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 10,\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  loading: isSubmitting,\n                  children: \"SEND MESSAGE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      ref: fileInputRef,\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/components/_dashboard/announcement/PostForm.js"],"names":["useRef","useState","Yup","PropTypes","Icon","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Typography","TextareaAutosize","TextField","IconButton","Radio","RadioGroup","FormControlLabel","styled","roundAddPhotoAlternate","axios","fakeRequest","AnnouncementPostForm","enqueueSnackbar","fileInputRef","imageFiles","setImageFiles","uploadImgs","setUploadImgs","handleAttach","current","click","handleImageUpload","e","fileObj","fileArray","formData","FormData","push","target","files","i","length","file","append","name","index","url","URL","createObjectURL","MessageImgStyle","theme","height","minWidth","width","cursor","objectFit","borderRadius","shape","itemValidation","object","message","string","required","position","coverage","formik","enableReinitialize","initialValues","posted_at","publisher","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","imgs","res","post","data","variant","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","padding","lineHeight","mt","mb","map","img","Boolean","display","justifyContent"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@material-ui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Typography,\n  TextareaAutosize,\n  TextField,\n  IconButton,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  styled\n} from '@material-ui/core';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// utils\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// ----------------------------------------------------------------------\n\nexport default function AnnouncementPostForm() {\n  const { enqueueSnackbar } = useSnackbar();\n  const fileInputRef = useRef(null);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [uploadImgs, setUploadImgs] = useState(null);\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleImageUpload = (e) => {\n    // console.log(e.target.files);\n    const fileObj = [];\n    const fileArray = [];\n    const formData = new FormData();\n    fileObj.push(e.target.files);\n    for (let i = 0; i < fileObj[0].length; i += 1) {\n      const file = fileObj[0][i];\n      formData.append(`img[${i}]`, file, file.name);\n      fileArray.push({ index: i, name: file.name, url: URL.createObjectURL(file) });\n    }\n    // console.log(fileArray);\n    setImageFiles(fileArray);\n    setUploadImgs(formData);\n  };\n\n  const MessageImgStyle = styled('img')(({ theme }) => ({\n    height: 80,\n    minWidth: 80,\n    width: 'auto',\n    cursor: 'pointer',\n    objectFit: 'cover',\n    borderRadius: theme.shape.borderRadius\n  }));\n\n  const itemValidation = Yup.object().shape({\n    message: Yup.string().required('This field is required'),\n    position: Yup.string().required('This field is required'),\n    coverage: Yup.string().required('This field is required')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      message: '',\n      posted_at: 'public',\n      publisher: 'admin',\n      position: '',\n      coverage: 150\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await fakeRequest(500);\n\n        let imgs = [];\n\n        if (uploadImgs) {\n          const res = await axios.post('/roomMessages/upload_multi_imgs', uploadImgs);\n          imgs = res.data.data;\n          setImageFiles([]);\n          setUploadImgs(null);\n        }\n\n        values.imgs = imgs;\n        await axios.post('/roomMessages/announcement', values);\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Posted announcement successful', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n  // console.log(values);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={2}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextareaAutosize\n                    {...getFieldProps('message')}\n                    maxRows={20}\n                    minRows={6}\n                    aria-label=\"Post Public Announcement\"\n                    placeholder=\"text input(max. 2000 words)\"\n                    style={{ width: '100%', padding: '10px' }}\n                    // error={Boolean(touched.message && errors.message)}\n                    // helperText={touched.message && errors.message}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 3 }}>\n                    Add pictures (max. 9) from hard-disk.\n                  </Typography>\n                  <IconButton size=\"small\" onClick={handleAttach}>\n                    <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\n                  </IconButton>\n                </Stack>\n\n                {imageFiles.length > 0 && (\n                  <Stack direction={{ xs: 'column', sm: 'row' }} sx={{ mt: 1, mb: 1 }} spacing={{ xs: 3, sm: 2 }}>\n                    {imageFiles.map((img) => (\n                      <MessageImgStyle key={`${img.index}`} alt=\"attachment\" src={`${img.url}`} />\n                    ))}\n                  </Stack>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 10, sm: 8 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Post at\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('posted_at')}\n                    aria-label=\"Posted at\"\n                    // error={Boolean(touched.posted_at && errors.posted_at)}\n                    // helperText={touched.posted_at && errors.posted_at}\n                  >\n                    <FormControlLabel value=\"public\" control={<Radio />} label=\"Public chat room\" />\n                    <FormControlLabel value=\"top\" control={<Radio />} label=\"Top column\" />\n                  </RadioGroup>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 8, sm: 5 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Publisher\n                  </Typography>\n                  <RadioGroup\n                    {...getFieldProps('publisher')}\n                    aria-label=\"Publisher\"\n                    // error={Boolean(touched.publisher && errors.publisher)}\n                    // helperText={touched.publisher && errors.publisher}\n                  >\n                    <FormControlLabel value=\"admin\" control={<Radio />} label=\"App administrator (default)\" />\n                    <FormControlLabel value=\"user\" control={<Radio />} label=\"User email\" />\n                  </RadioGroup>\n                </Stack>\n\n                {values.publisher === 'user' && (\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 18, sm: 15 }}>\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                      &nbsp;\n                    </Typography>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <TextField\n                        {...getFieldProps('poster_email')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        // error={Boolean(touched.poster_email && errors.poster_email)}\n                        // helperText={touched.poster_email && errors.poster_email}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        (announcement post by user's name/avatar)\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <Typography variant=\"subtitle1\" component=\"div\" style={{ lineHeight: 2 }}>\n                    Range Setting\n                  </Typography>\n                  <Stack spacing={1}>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Center (longitude, latitude)\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('position')}\n                        variant=\"standard\"\n                        style={{ width: 300 }}\n                        error={Boolean(touched.position && errors.position)}\n                        helperText={touched.position && errors.position}\n                      />\n                    </Stack>\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        Cover people\n                      </Typography>\n                      <TextField\n                        {...getFieldProps('coverage')}\n                        variant=\"standard\"\n                        style={{ width: 200 }}\n                        error={Boolean(touched.coverage && errors.coverage)}\n                        helperText={touched.coverage && errors.coverage}\n                      />\n                      <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\n                        person（ between 0 ~ 1 million )\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Stack>\n\n                <Box sx={{ mt: 10, display: 'flex', justifyContent: 'center' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    SEND MESSAGE\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n      <input\n        type=\"file\"\n        multiple\n        ref={fileInputRef}\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        onChange={handleImageUpload}\n      />\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}