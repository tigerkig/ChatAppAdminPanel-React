{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var joined = args.map(function (x) {\n    return source(x);\n  }).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  var opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\n\n\nfunction either() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var opts = stripOptionsFromArgs(args);\n  var joined = '(' + (opts.capture ? \"\" : \"?:\") + args.map(function (x) {\n    return source(x);\n  }).join(\"|\") + \")\";\n  return joined;\n}\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\n\n\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  var HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: concat(/\"/, either.apply(void 0, HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/node_modules/highlight.js/lib/languages/accesslog.js"],"names":["source","re","concat","args","joined","map","x","join","stripOptionsFromArgs","opts","length","constructor","Object","splice","either","capture","accesslog","_hljs","HTTP_VERBS","name","contains","className","begin","relevance","end","keywords","illegal","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: concat(/\"/, either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n"]},"metadata":{},"sourceType":"script"}