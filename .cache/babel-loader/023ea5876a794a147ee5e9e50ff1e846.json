{"ast":null,"code":"var _jsxFileName = \"E:\\\\dev\\\\admin_panel\\\\LocalsAdminPanel\\\\src\\\\pages\\\\dashboard\\\\UserCreate.js\";\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom'; // material\n\nimport { Container } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList } from '../../redux/slices/user'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserCreate() {\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    name\n  } = useParams();\n  const {\n    userList\n  } = useSelector(state => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find(user => paramCase(user.name) === name);\n  const userSpecialPermissions = {};\n  useEffect(() => {\n    dispatch(getUserList());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User: Create a new user | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: !isEdit ? 'Create a new user' : 'Edit user',\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'User',\n          href: PATH_DASHBOARD.user.list\n        }, {\n          name: !isEdit ? 'New user' : name\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserNewForm, {\n        isEdit: isEdit,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserSpecialPermissionsForm, {\n        userSpecialPermissions: userSpecialPermissions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/dev/admin_panel/LocalsAdminPanel/src/pages/dashboard/UserCreate.js"],"names":["useEffect","paramCase","useParams","useLocation","Container","useDispatch","useSelector","getUserList","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","UserNewForm","UserSpecialPermissionsForm","UserCreate","themeStretch","dispatch","pathname","name","userList","state","user","isEdit","includes","currentUser","find","userSpecialPermissions","href","root","list"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC,C,CACA;;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,0BAAP,MAAuC,6DAAvC,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAmBN,WAAW,EAApC;AACA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAed,WAAW,EAAhC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAWhB,SAAS,EAA1B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAeb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACM,QAAT,CAAkB,MAAlB,CAAf;AACA,QAAMC,WAAW,GAAGL,QAAQ,CAACM,IAAT,CAAeJ,IAAD,IAAUpB,SAAS,CAACoB,IAAI,CAACH,IAAN,CAAT,KAAyBA,IAAjD,CAApB;AACA,QAAMQ,sBAAsB,GAAG,EAA/B;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,kCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,CAACO,MAAD,GAAU,mBAAV,GAAgC,WAD3C;AAEE,QAAA,KAAK,EAAE,CACL;AAAEJ,UAAAA,IAAI,EAAE,WAAR;AAAqBS,UAAAA,IAAI,EAAEnB,cAAc,CAACoB;AAA1C,SADK,EAEL;AAAEV,UAAAA,IAAI,EAAE,MAAR;AAAgBS,UAAAA,IAAI,EAAEnB,cAAc,CAACa,IAAf,CAAoBQ;AAA1C,SAFK,EAGL;AAAEX,UAAAA,IAAI,EAAE,CAACI,MAAD,GAAU,UAAV,GAAuBJ;AAA/B,SAHK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEI,MAArB;AAA6B,QAAA,WAAW,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,0BAAD;AAA4B,QAAA,sBAAsB,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD","sourcesContent":["import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm';\n\n// ----------------------------------------------------------------------\n\nexport default function UserCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find((user) => paramCase(user.name) === name);\n  const userSpecialPermissions = {};\n\n  useEffect(() => {\n    dispatch(getUserList());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"User: Create a new user | Locals\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: !isEdit ? 'New user' : name }\n          ]}\n        />\n\n        <UserNewForm isEdit={isEdit} currentUser={currentUser} />\n        <UserSpecialPermissionsForm userSpecialPermissions={userSpecialPermissions} />\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}